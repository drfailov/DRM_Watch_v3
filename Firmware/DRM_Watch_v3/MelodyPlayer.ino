const int entertainer[]={583, -214, 618, -214, 655, -214, 1040, -428, 655, -214, 1040, -428, 655, -214, 1040, -857, 1040, -214, 1167, -214, 1236, -214, 1310, -214, 1040, -214, 1167, -214, 1310, -428, 981, -214, 1167, -428, 1040, -857, -428, 583, -214, 618, -214, 655, -214, 1040, -428, 655, -214, 1040, -428, 655, -214, 1040, -857, -214, 874, -214, 779, -214, 735, -214, 874, -214, 1040, -214, 1310, -428, 1167, -214, 1040, -214, 874, -214, 1167, -857, 19};
const int badinerie[]={988, -241, 1175, -118, 988, -118, 740, -241, 988, -118, 740, -118, 587, -241, 740, -118, 587, -118, 494, -410, -82, 370, -118, 494, -118, 587, -118, 494, -118, 554, -118, 494, -118, 554, -118, 494, -118, 466, -118, 554, -118, 659, -118, 554, -118, 587, -241, 494, -241, 988, -241, 1175, -118, 988, -118, 740, -241, 988, -118, 740, -118, 587, -241, 740, -118, 587, -118, 494, -410, -82, 587, -241, 587, -241, 587, -82, -164, 587, -82, -164, 988, -241, 587, -241, 587, -56, 659, -56, 587, -56, 659, -56, 554, -241, 740, -82, -164, 740, -82, -164, 740, -241, 740, -241, 1175, -241, 740, -241, 740, -56, 784, -56, 740, -56, 784, -56, 698, -241, 554, -118, 740, -118, 880, -118, 740, -118, 831, -118, 740, -118, 831, -118, 740, -118, 698, -118, 831, -118, 988, -118, 831, -118, 880, -118, 831, -118, 880, -118, 831, -118, 740, -118, 880, -118, 740, -123, 698, -123, 740, -118, 988, -118, 740, -123, 698, -123, 740, -118, 1109, -118, 740, -123, 698, -123, 740, -118, 1175, -118, 740, -123, 698, -123, 740, -118, 1175, -118, 1109, -118, 988, -118, 1109, -118, 880, -118, 831, -118, 740, -118, 880, -241, 831, -56, 880, -56, 831, -56, 880, -56, 740, -410, -82, 988, -241, 1175, -118, 988, -118, 740, -241, 988, -118, 740, -118, 587, -241, 740, -118, 587, -118, 494, -410, -82, 370, -118, 494, -118, 587, -118, 494, -118, 554, -118, 494, -118, 554, -118, 494, -118, 466, -118, 554, -118, 659, -118, 554, -118, 587, -241, 494, -241, 988, -241, 1175, -118, 988, -118, 740, -241, 988, -118, 740, -118, 587, -241, 740, -118, 587, -118, 494, -410, -82, 587, -241, 587, -241, 587, -82, -164, 587, -82, -164, 988, -241, 587, -241, 587, -56, 659, -56, 587, -56, 659, -56, 554, -241, 740, -82, -164, 740, -82, -164, 740, -241, 740, -241, 1175, -241, 740, -241, 740, -56, 784, -56, 740, -56, 784, -56, 698, -241, 554, -118, 740, -118, 880, -118, 740, -118, 831, -118, 740, -118, 831, -118, 740, -118, 698, -118, 831, -118, 988, -118, 831, -118, 880, -118, 831, -118, 880, -118, 831, -118, 740, -118, 880, -118, 740, -123, 698, -123, 740, -118, 988, -118, 740, -123, 698, -123, 740, -118, 1109, -118, 740, -123, 698, -123, 740, -118, 1175, -118, 740, -123, 698, -123, 740, -118, 1175, -118, 1109, -118, 988, -118, 1109, -118, 880, -118, 831, -118, 740, -118, 880, -241, 831, -56, 880, -56, 831, -56, 880, -56, 740, -410, -82, 740, -241, 880, -118, 740, -118, 554, -241, 740, -118, 554, -118, 440, -241, 554, -118, 440, -118, 370, -410, -82, 523, -246, 494, -241, 659, -246, 622, -118, 740, -118, 880, -241, 784, -118, 740, -118, 784, -241, 659, -241, 784, -241, 988, -118, 784, -118, 659, -241, 784, -118, 659, -118, 554, -241, 659, -118, 554, -118, 440, -410, -82, 440, -118, 587, -118, 740, -118, 587, -118, 659, -118, 587, -118, 659, -118, 587, -118, 554, -118, 659, -118, 784, -118, 659, -118, 740, -118, 659, -118, 740, -118, 659, -118, 587, -118, 740, -118, 587, -123, 554, -123, 587, -118, 784, -118, 587, -123, 554, -123, 587, -118, 880, -118, 587, -123, 554, -123, 587, -118, 988, -118, 587, -123, 554, -123, 587, -118, 988, -118, 880, -118, 784, -118, 880, -118, 740, -118, 659, -118, 587, -118, 740, -241, 659, -56, 740, -56, 659, -56, 740, -56, 587, -410, -82, 740, -82, -164, 740, -82, -164, 740, -82, -164, 740, -82, -164, 1175, -241, 740, -241, 740, -56, 784, -56, 740, -56, 784, -56, 659, -241, 659, -82, -164, 659, -82, -164, 659, -241, 659, -241, 1109, -241, 659, -241, 659, -56, 740, -56, 659, -56, 740, -56, 587, -241, 988, -241, 1175, -118, 988, -118, 880, -61, 784, -492, 784, -179, 988, -56, 880, -56, 784, -56, 740, -56, 659, -492, 659, -241, 784, -61, 740, -61, 659, -61, 587, -56, 523, -118, 659, -118, 784, -118, 659, -118, 523, -118, 494, -118, 523, -118, 494, -118, 466, -82, -164, 370, -82, -164, 392, -174, -72, 370, -82, -164, 494, -241, 466, -118, 554, -118, 659, -241, 587, -118, 554, -118, 587, -241, 494, -61, 554, -61, 587, -61, 659, -61, 740, -241, 587, -118, 740, -118, 988, -241, 740, -241, 659, -118, 587, -118, 554, -118, 587, -118, 554, -31, 494, -410, -82, 740, -241, 880, -118, 740, -118, 554, -241, 740, -118, 554, -118, 440, -241, 554, -118, 440, -118, 370, -410, -81, 523, -246, 494, -241, 659, -246, 622, -118, 740, -118, 880, -241, 784, -118, 740, -118, 784, -241, 659, -241, 784, -241, 988, -118, 784, -118, 659, -241, 784, -118, 659, -118, 554, -241, 659, -118, 554, -118, 440, -410, -82, 440, -118, 587, -118, 740, -118, 587, -118, 659, -118, 587, -118, 659, -118, 587, -118, 554, -118, 659, -118, 784, -118, 659, -118, 740, -118, 659, -118, 740, -118, 659, -118, 587, -118, 740, -118, 587, -123, 554, -123, 587, -118, 784, -118, 587, -123, 554, -123, 587, -118, 880, -118, 587, -123, 554, -123, 587, -118, 988, -118, 587, -123, 554, -123, 587, -118, 988, -118, 880, -118, 784, -118, 880, -118, 740, -118, 659, -118, 587, -118, 740, -241, 659, -56, 740, -56, 659, -56, 740, -56, 587, -410, -82, 740, -82, -163, 740, -82, -164, 740, -82, -164, 740, -82, -164, 1175, -241, 740, -241, 740, -56, 784, -56, 740, -56, 784, -56, 659, -241, 659, -82, -164, 659, -82, -164, 659, -241, 659, -241, 1109, -241, 659, -241, 659, -56, 740, -56, 659, -56, 740, -56, 587, -241, 988, -241, 1175, -118, 988, -118, 880, -61, 784, -492, 784, -179, 988, -56, 880, -56, 784, -56, 740, -56, 659, -492, 659, -241, 784, -61, 740, -61, 659, -61, 587, -56, 523, -118, 659, -118, 784, -118, 659, -118, 523, -118, 494, -118, 523, -118, 494, -118, 466, -82, -163, 370, -82, -164, 392, -174, -72, 370, -82, -164, 494, -241, 466, -118, 554, -118, 659, -241, 587, -118, 554, -118, 587, -241, 494, -61, 554, -61, 587, -61, 659, -61, 740, -241, 587, -118, 740, -118, 988, -294, 740, -294, 659, -144, 587, -144, 554, -144, 587, -144, 554, -63, 494, -833, 19};
const int nokiaTune[]={1558, -133, 1388, -133, 874, -267, 981, -267, 1310, -133, 1167, -133, 694, -267, 779, -267, 1167, -133, 1040, -133, 655, -267, 779, -267, 1040, -1071, 19};
const int groovyBlue[]={1388, -120, -1920, 1040, -120, 1236, -120, 1040, -120, 1236, -120, 1388, -120, -1920, 1040, -120, 1236, -120, 1040, -120, 1236, -120, 1388, -240, 694, -120, -240, 694, -120, -240, 694, -120, -240, 694, -120, -240, 694, -120, -240, 694, -120, -240, 1040, -120, 1236, -120, 1040, -120, 1236, -120, 1388, -240, 1388, -120, -240, 1388, -120, -240, 1388, -120, -240, 1388, -120, -240, 1388, -120, -240, 1388, -120, -240, 1040, -120, 1236, -120, 1040, -120, 1236, -120, 1388, -240, 1388, -120, 1650, -240, 1388, -120, 1853, -240, 1388, -120, -240, 1388, -120, 1650, -240, 1388, -120, 1853, -120, -120, 1388, -120, -240, 1040, -120, 1236, -120, 1040, -120, 1236, -120, 1388, -240, 1388, -120, 1650, -240, 1388, -120, 1853, -240, 1388, -120, -240, 1388, -120, 1650, -240, 1388, -120, 1853, -120, -120, 1388, -120, -240, 1040, -120, 1236, -120, 1040, -120, 1236, -120, 1388, -240, 1388, -120, 1650, -240, 1388, -120, 1963, -240, 1388, -120, 1853, -240, 1388, -120, 1749, -240, 1388, -120, 1650, -240, 1388, -120, 1558, -240, -480, 1040, -120, 1236, -120, 1040, -120, 1236, -120, 1388, -240, 19};
const int ukraine[]={554, -248, -116, 554, -332, -23, 494, -325, -30, 554, -267, -85, 587, -241, -114, 659, -969, -86, 587, -253, -96, 554, -615, -81, 494, -587, -112, 440, -640, -69, 554, -609, -94, 415, -633, -58, 554, -562, -123, 370, -320, -24, 349, -310, -34, 370, -310, -41, 415, -316, -35, 440, -651, -52, 494, -544, -158, 554, -955, -89, 554, -278, -72, 554, -340, 494, -359, 554, -302, -48, 587, -247, -104, 659, -961, -71, 587, -287, -61, 554, -611, -83, 494, -628, -65, 440, -587, -97, 370, -659, -38, 554, -674, 349, -675, 370, -1336, -75, 370, -749, -688, 415, -917, -133, 415, -297, -47, 554, -330, 494, -315, -38, 440, -347, 415, -389, 370, -318, 415, -349, 440, -353, 370, -362, 415, -619, -83, 415, -577, -119, 440, -578, -118, 440, -585, -102, 494, -574, -105, 494, -576, -107, 554, -1263, -90, 554, -731, -654, 415, -898, -121, 415, -310, -32, 554, -323, -20, 494, -324, -17, 440, -358, 415, -312, -34, 370, -318, 415, -361, 440, -342, 370, -332, -23, 415, -589, -90, 415, -597, -91, 440, -618, -52, 554, -585, -79, 415, -674, 554, -575, -111, 370, -348, 415, -338, 440, -346, 494, -284, -83, 554, -642, -91, 587, -650, -100, 659, -982, -71, 622, -287, -67, 659, -625, -57, 554, -623, -61, 494, -559, -123, 494, -576, -123, 659, -323, -25, 587, -292, -45, 554, -336, 494, -328, -26, 440, -558, -132, 440, -596, -98, 494, -568, -133, 494, -609, -80, 554, -907, -113, 494, -294, -44, 440, -331, 494, -289, -57, 554, -290, -61, 587, -218, -149, 659, -965, -94, 622, -214, -129, 659, -609, -95, 554, -590, -107, 494, -606, -107, 494, -568, -137, 659, -338, 587, -307, -45, 554, -245, -101, 494, -237, -119, 440, -579, -122, 370, -590, -100, 554, -603, -83, 349, -659, -60, 370, -1330, -92, 370, -750, -674, 659, -930, -133, 622, -249, -89, 659, -605, -98, 554, -603, -94, 494, -603, -111, 494, -579, -130, 659, -341, 587, -322, -20, 554, -279, -78, 494, -244, -115, 440, -617, -94, 440, -610, -92, 494, -562, -119, 494, -610, -83, 554, -935, -120, 494, -266, -81, 440, -346, 494, -263, -82, 554, -273, -81, 587, -234, -126, 659, -1004, -66, 622, -240, -108, 659, -637, -59, 554, -666, -31, 494, -590, -106, 494, -586, -110, 659, -319, -24, 587, -268, -75, 554, -305, -48, 494, -269, -87, 440, -572, -129, 370, -646, -49, 554, -732, 349, -730, 370, -1338, -138, 370, -776, 19};
const int blindinglights[]={698, -678, 698, -508, -28, 622, -169, 698, -169, 784, -339, -18, 523, -339, -18, 622, -508, -28, 698, -678, -36, 698, -508, -28, 622, -169, 698, -169, 784, -339, -18, 523, -339, -19, 622, -508, -27, 932, -169, 784, -339, -18, 698, -339, -18, 622, -508, -28, 932, -169, 784, -339, -19, 698, -339, -18, 622, -339, -18, 698, -2205, -116, 523, -169, 466, -169, 523, -169, 466, -169, 523, -2035, -107, 523, -169, 466, -169, 523, -169, 466, -169, 622, -339, -18, 466, -169, 466, -339, -19, 523, -169, 392, -1017, -55, 523, -169, 466, -169, 523, -169, 466, -169, 622, -339, -18, 466, -169, 466, -339, -18, 523, -169, 392, -1017, -55, 466, -339, -18, 523, -339, -18, 349, -1865, -99, 466, -169, 523, -169, 466, -169, 523, -169, 466, -169, 523, -2035, -108, 523, -169, 466, -169, 523, -169, 466, -169, 622, -339, -18, 466, -169, 466, -339, -18, 523, -169, 392, -1017, -54, 523, -169, 466, -169, 523, -169, 466, -169, 622, -339, -19, 466, -169, 466, -339, -18, 523, -169, 392, -1017, -54, 466, -339, -18, 523, -339, -19, 349, -1865, -99, 466, -169, 523, -169, 466, -169, 523, -169, 466, -169, 523, -339, -18, 523, -339, -18, 622, -169, 698, -339, -18, 784, -339, -18, 523, -339, -18, 622, -339, -18, 698, -508, -28, 523, -339, -18, 523, -339, -18, 622, -169, 698, -339, -18, 784, -339, -18, 523, -339, -18, 622, -339, -18, 698, -508, -385, 523, -339, -18, 622, -169, 698, -339, -18, 784, -339, -18, 523, -339, -18, 622, -339, -18, 698, -508, -28, 587, -678, -36, 523, -678, -37, 466, -508, -27, 1047, -339, -19, 622, -508, -27, 698, -2205, -117, 698, -169, 784, -339, -18, 698, -339, -19, 622, -169, 622, -339, -18, 523, -169, 622, -508, -28, 523, -678, -36, 622, -508, -28, 932, -169, 784, -339, -18, 698, -339, -18, 622, -508, -28, 932, -169, 784, -339, -18, 698, -339, -18, 622, -847, -46, 698, -1526, -81, 784, -339, -18, 622, -508, -28, 698, -2205, -116, 698, -169, 784, -339, -18, 698, -339, -18, 622, -169, 622, -339, -18, 523, -169, 622, -508, -28, 523, -678, -36, 622, -169, 622, -339, -18, 932, -169, 784, -339, -18, 698, -339, -18, 622, -508, -28, 932, -169, 784, -339, -18, 698, -339, -19, 622, -847, -45, 698, -678, -37, 698, -678, -36, 698, -678, -36, 698, -339, -18, 698, -678, -37, 698, -508, -27, 622, -169, 698, -169, 784, -339, -18, 523, -339, -18, 622, -508, -28, 698, -678, -36, 698, -508, -28, 622, -169, 698, -169, 784, -339, -18, 523, -339, -18, 622, -508, -28, 932, -169, 784, -339, -18, 698, -339, -19, 622, -508, -27, 932, -169, 784, -339, -18, 698, -339, -18, 622, -339, -18, 698, -2035, -108, 466, -169, 523, -169, 466, -169, 523, -169, 466, -169, 523, -1865, -99, 392, -169, 523, -169, 466, -169, 523, -169, 466, -169, 622, -339, -18, 466, -169, 466, -339, -18, 523, -169, 392, -1017, -54, 523, -169, 466, -169, 523, -169, 466, -169, 622, -339, -18, 466, -169, 466, -339, -18, 523, -169, 392, -1017, -54, 466, -339, -18, 523, -339, -18, 349, -1356, -73, 622, -339, -18, 587, -339, -18, 523, -339, -18, 466, -339, -19, 523, -339, -18, 523, -339, -18, 622, -169, 698, -339, -19, 784, -339, -18, 523, -339, -18, 622, -339, -18, 698, -508, -28, 523, -339, -18, 523, -339, -18, 622, -169, 698, -339, -18, 784, -339, -18, 932, -339, -18, 622, -339, -18, 698, -847, -46, 523, -339, -18, 622, -169, 698, -339, -18, 784, -339, -18, 523, -339, -18, 622, -339, -18, 698, -508, -28, 587, -678, -36, 523, -678, -37, 466, -508, -27, 1047, -339, -18, 622, -508, -28, 698, -2205, -117, 698, -169, 784, -339, -18, 698, -339, -18, 622, -169, 622, -339, -18, 523, -169, 622, -508, -27, 523, -678, -37, 622, -508, -27, 932, -169, 784, -339, -18, 698, -339, -18, 622, -508, -28, 932, -169, 784, -339, -18, 698, -339, -18, 622, -847, -46, 698, -1526, -81, 784, -339, -18, 622, -508, -28, 698, -2205, -116, 698, -169, 784, -339, -18, 698, -339, -18, 622, -169, 622, -339, -18, 523, -169, 622, -508, -28, 523, -678, -36, 622, -508, -28, 932, -169, 784, -339, -18, 698, -339, -18, 622, -508, -28, 932, -169, 784, -339, -18, 698, -339, -18, 622, -847, -46, 698, -1696, -90, 932, -169, 831, -169, 932, -169, 831, -169, 1047, -339, -18, 784, -169, 784, -339, -18, 698, -169, 698, -1017, -54, 932, -169, 784, -169, 932, -169, 784, -169, 1047, -339, -19, 784, -169, 784, -339, -18, 698, -169, 698, -169, 622, -1187, -63, 932, -339, -19, 1047, -339, -18, 784, -169, 784, -339, -18, 698, -169, 784, -508, -28, 698, -508, -27, 932, -339, -19, 932, -508, -27, 831, -169, 784, -169, 698, -508, -28, 784, -847, -46, 784, -339, -18, 622, -508, -28, 698, -2205, -116, 698, -169, 784, -339, -18, 698, -339, -18, 622, -169, 622, -339, -18, 523, -169, 622, -508, -28, 523, -678, -36, 622, -508, -28, 932, -169, 784, -339, -18, 698, -339, -18, 622, -508, -28, 932, -169, 784, -339, -18, 698, -339, -19, 622, -847, -45, 698, -678, -37, 698, -678, -36, 698, -678, -36, 698, -339, -18, 698, -678, -37, 698, -508, -27, 622, -169, 698, -169, 784, -339, -18, 523, -339, -18, 622, -508, -28, 698, -678, -36, 698, -508, -28, 622, -169, 698, -169, 784, -339, -18, 523, -339, -18, 622, -508, -28, 932, -169, 784, -339, -18, 698, -339, -19, 622, -508, -27, 932, -169, 784, -339, -18, 698, -339, -18, 622, -339, -18, 698, -2883, -153, 698, -678, -36, 698, -508, -28, 622, -169, 698, -169, 784, -339, -18, 523, -339, -18, 622, -508, -28, 698, -678, -36, 698, -508, -28, 622, -169, 698, -169, 784, -339, -18, 523, -339, -19, 622, -508, -27, 932, -169, 784, -339, -18, 698, -339, -18, 622, -508, -28, 932, -169, 784, -339, -19, 698, -339, -18, 622, -339, -18, 698, -2035, -108, 784, -339, -18, 622, -508, -28, 698, -2205, -116, 698, -169, 784, -339, -18, 698, -339, -18, 622, -169, 622, -339, -19, 523, -169, 622, -508, -28, 523, -678, -36, 622, -508, -28, 932, -169, 784, -339, -19, 698, -339, -18, 622, -508, -28, 932, -169, 784, -339, -18, 698, -339, -18, 622, -847, -46, 698, -2374, 19};
const int wasWollenWirTrinken[]={1175, -74, -171, 1175, -94, -25, 1047, -126, 988, -117, -132, 1047, -213, -272, 880, -183, -180, 784, -95, -30, 880, -132, -110, 1175, -96, -151, 1175, -107, -134, 1047, -107, -141, 988, -97, -142, 1175, -81, -166, 1175, -119, 1047, -119, 988, -119, -128, 1047, -244, -241, 880, -147, -343, 988, -165, -74, 784, -96, -153, 880, -762, -453, 880, -135, -112, 1047, -99, -142, 1175, -86, -165, 1319, -135, -348, 1319, -135, -355, 1397, -117, -122, 1175, -101, -151, 1319, -487, -727, 1175, -64, -182, 1175, -117, 1047, -107, 988, -97, -153, 1047, -290, -196, 880, -111, -254, 784, -87, -35, 880, -128, -113, 1175, -70, -177, 1175, -99, -144, 1047, -115, -135, 988, -86, -150, 1175, -81, -165, 1175, -107, 1047, -130, 988, -117, -132, 1047, -150, -336, 880, -111, -380, 988, -90, -147, 784, -87, -165, 880, -597, -615, 880, -115, -132, 1047, -94, -147, 1175, -64, -188, 1319, -135, -347, 1319, -135, -355, 1397, -117, -122, 1175, -102, -150, 1319, -488, -726, 1175, -64, -183, 1175, -117, 1047, -107, 988, -96, -153, 1047, -286, -199, 880, -111, -255, 784, -86, -36, 880, -129, -112, 1175, -68, -178, 1175, -100, -142, 1047, -114, -137, 988, -87, -152, 1175, -79, -165, 1175, -107, 1047, -132, 988, -117, -133, 1047, -152, -332, 880, -111, -380, 988, -92, -147, 784, -86, -165, 880, -99, 19};
const int toreador[]={1040, -363, 1167, -363, 1040, -90, 874, -363, 874, -363, 874, -181, -90, 779, -90, 874, -363, 926, -90, 874, -363, -363, 926, -363, 779, -363, 1040, -90, 874, -363, -363, 694, -363, 583, -363, 779, -90, 520, -363, -363, 779, -727, 779, -181, 1167, -181, 1040, -181, 926, -181, 874, -181, -45, 779, -181, 874, -181, 926, -181, 874, -363, -363, 655, -363, 874, -363, 874, -363, 825, -181, 981, -181, 1310, -1454, -181, 1167, -45, 1310, -90, 1167, -45, 1101, -181, 1167, -181, 779, -181, 874, -181, 926, -363, -181, 874, -45, 926, -90, 874, -45, 694, -181, 1167, -181, 1040, -727, -363, 694, -45, 779, -90, 694, -45, 520, -181, 926, -181, 874, -181, -181, 779, -181, -181, 694, -181, -727, -727, 19};
const int blue[]={440, -448, 466, -224, 294, -224, 392, -224, 466, -224, 523, -224, 349, -224, 440, -224, 466, -448, -24, 392, -224, 466, -224, 587, -224, 622, -224, 392, -224, 587, -224, 523, -224, 466, -224, 294, -224, 392, -224, 466, -224, 523, -224, 349, -224, 440, -224, 466, -448, -24, 392, -224, 466, -224, 587, -224, 622, -224, 392, -224, 587, -224, 523, -224, 466, -224, 294, -224, 392, -224, 466, -224, 523, -224, 349, -224, 440, -224, 466, -448, -25, 392, -224, 466, -224, 587, -224, 622, -224, 392, -224, 587, -224, 523, -224, 466, -224, 294, -224, 392, -224, 466, -224, 440, -224, 262, -224, 349, -224, 392, -448, -24, 262, -224, 349, -224, 392, -448, -25, 349, -224, 392, -224, 440, -224, 466, -224, 294, -224, 392, -224, 466, -224, 523, -224, 349, -224, 440, -224, 466, -448, -25, 392, -224, 466, -224, 587, -224, 622, -224, 392, -224, 587, -224, 523, -224, 466, -224, 294, -224, 392, -224, 466, -224, 523, -224, 349, -224, 440, -224, 466, -448, -24, 392, -224, 466, -224, 587, -224, 622, -224, 392, -224, 587, -224, 523, -224, 466, -224, 294, -224, 392, -224, 466, -224, 523, -224, 349, -224, 440, -224, 466, -448, -25, 392, -224, 466, -224, 587, -224, 622, -224, 392, -224, 587, -224, 523, -224, 466, -224, 294, -224, 392, -224, 466, -224, 440, -224, 262, -224, 349, -224, 392, -448, -24, 262, -224, 349, -224, 392, -448, -24, 349, -224, 392, -224, 440, -224, 466, -224, 294, -224, 392, -224, 466, -224, 523, -224, 349, -224, 440, -224, 466, -448, -25, 392, -224, 466, -224, 587, -224, 622, -224, 392, -224, 587, -224, 523, -224, 466, -224, 294, -224, 392, -224, 466, -224, 523, -224, 349, -224, 440, -224, 466, -448, -24, 392, -224, 466, -224, 587, -224, 622, -224, 392, -224, 587, -224, 523, -224, 466, -224, 294, -224, 392, -224, 466, -224, 523, -224, 349, -224, 440, -224, 466, -448, -25, 392, -224, 466, -224, 587, -224, 622, -224, 392, -224, 587, -224, 523, -224, 466, -224, 294, -224, 392, -224, 466, -224, 440, -224, 262, -224, 349, -224, 392, -448, -24, 262, -224, 349, -224, 392, -1346, -71, 294, -224, 294, -224, 311, -224, 311, -224, 294, -224, 294, -224, 311, -224, 311, -224, 294, -224, 294, -1570, -84, 294, -224, 294, -224, 311, -224, 311, -224, 294, -448, -24, 294, -224, 311, -224, 311, -224, 294, -224, 392, -224, 370, -1122, -59, 294, -224, 294, -224, 311, -224, 311, -224, 294, -224, 294, -224, 311, -224, 311, -224, 294, -224, 392, -1570, -84, 294, -224, 349, -224, 392, -224, 294, -224, 294, -448, -24, 294, -224, 294, -224, 233, -224, 233, -224, 233, -1346, -71, 294, -224, 294, -224, 311, -224, 311, -224, 294, -224, 294, -224, 311, -224, 311, -224, 294, -224, 294, -1570, -84, 294, -224, 294, -224, 311, -224, 311, -224, 294, -448, -24, 294, -224, 311, -224, 311, -224, 294, -224, 392, -224, 370, -1122, -59, 294, -224, 294, -224, 311, -224, 311, -224, 294, -224, 294, -224, 311, -224, 311, -224, 294, -224, 392, -1570, -84, 294, -224, 349, -224, 392, -224, 294, -224, 294, -448, -24, 294, -224, 294, -224, 233, -224, 233, -224, 233, -673, -36, 440, -448, -24, 466, -224, 294, -224, 392, -224, 466, -224, 523, -224, 349, -224, 440, -224, 466, -448, -24, 392, -224, 466, -224, 587, -224, 622, -224, 392, -224, 587, -224, 523, -224, 466, -224, 294, -224, 392, -224, 466, -224, 523, -224, 349, -224, 440, -224, 466, -448, -25, 392, -224, 466, -224, 587, -224, 622, -224, 392, -224, 587, -224, 523, -224, 466, -224, 294, -224, 392, -224, 466, -224, 523, -224, 349, -224, 440, -224, 466, -448, -24, 392, -224, 466, -224, 587, -224, 622, -224, 392, -224, 587, -224, 523, -224, 466, -224, 294, -224, 392, -224, 466, -224, 440, -224, 262, -224, 349, -224, 392, -448, -25, 262, -224, 349, -224, 392, -448, -25, 349, -224, 392, -224, 440, -224, 466, -224, 294, -224, 392, -224, 466, -224, 523, -224, 349, -224, 440, -224, 466, -448, -24, 392, -224, 466, -224, 587, -224, 622, -224, 392, -224, 587, -224, 523, -224, 466, -224, 294, -224, 392, -224, 466, -224, 523, -224, 349, -224, 440, -224, 466, -448, -25, 392, -224, 466, -224, 587, -224, 622, -224, 392, -224, 587, -224, 523, -224, 466, -224, 294, -224, 392, -224, 466, -224, 523, -224, 349, -224, 440, -224, 466, -448, -24, 392, -224, 466, -224, 587, -224, 622, -224, 392, -224, 587, -224, 523, -224, 466, -224, 294, -224, 392, -224, 466, -224, 440, -224, 262, -224, 349, -224, 392, -448, -25, 262, -224, 349, -224, 392, 19};
const int nyancat[]={740, -214, 831, -107, -108, 554, -107, 622, -214, 494, -54, -53, 587, -107, 554, -107, 494, -107, -108, 494, -107, -107, 554, -214, 587, -107, -108, 587, -54, -53, 554, -54, -53, 494, -107, 554, -107, 622, -107, 740, -107, 831, -107, 622, -107, 740, -107, 554, -107, 587, -107, 494, -107, 554, -107, 494, -107, 622, -214, 740, -107, -107, 831, -107, 622, -107, 740, -107, 554, -107, 587, -107, 494, -107, 554, -107, 622, -107, 587, -107, 554, -107, 494, -107, 554, -107, 587, -107, -107, 494, -107, 554, -107, 587, -107, 740, -107, 554, -107, 587, -107, 554, -107, 494, -107, 554, -107, -108, 494, -107, -107, 554, -107, -107, 740, -214, 831, -107, -108, 554, -107, 622, -214, 494, -54, -53, 587, -107, 554, -107, 494, -107, -107, 494, -107, -107, 554, -214, 587, -107, -108, 587, -54, -53, 554, -54, -53, 494, -107, 554, -107, 622, -107, 740, -107, 831, -107, 622, -107, 740, -107, 554, -107, 587, -107, 494, -107, 554, -107, 494, -107, 622, -214, 740, -107, -107, 831, -107, 622, -107, 740, -107, 554, -107, 587, -107, 494, -107, 554, -107, 622, -107, 587, -107, 554, -107, 494, -107, 554, -107, 587, -107, -107, 494, -107, 554, -107, 587, -107, 740, -107, 554, -107, 587, -107, 554, -107, 494, -107, 554, -214, 494, -107, -107, 494, -107, -107, 494, -107, -108, 370, -107, 415, -107, 494, -107, -107, 370, -107, 415, -107, 494, -107, 554, -107, 622, -107, 554, -107, 659, -107, 622, -107, 659, -107, 740, -107, 494, -107, -107, 494, -107, -107, 370, -107, 415, -107, 494, -107, 415, -107, 659, -107, 622, -107, 554, -107, 494, -107, 370, -107, 311, -107, 330, -107, 370, -107, 494, -107, -107, 370, -107, 415, -107, 494, -107, -108, 370, -107, 415, -107, 494, -107, 494, -107, 554, -107, 622, -107, 494, -107, 370, -107, 415, -107, 370, -107, 494, -214, 494, -107, 466, -107, 494, -107, 370, -107, 415, -107, 494, -107, 659, -107, 622, -107, 659, -107, 740, -107, 494, -107, -107, 466, -107, -107, 494, -107, -108, 370, -107, 415, -107, 494, -107, -107, 370, -107, 415, -107, 494, -107, 554, -107, 622, -107, 554, -107, 659, -107, 622, -107, 659, -107, 740, -107, 494, -107, -107, 494, -107, -107, 370, -107, 415, -107, 494, -107, 415, -107, 659, -107, 622, -107, 554, -107, 494, -107, 370, -107, 311, -107, 330, -107, 370, -107, 494, -107, -107, 370, -107, 415, -107, 494, -107, -107, 370, -107, 415, -107, 494, -107, 494, -107, 554, -107, 622, -107, 494, -107, 370, -107, 415, -107, 370, -107, 494, -214, 494, -107, 466, -107, 494, -107, 370, -107, 415, -107, 494, -107, 659, -107, 622, -107, 659, -107, 740, -107, 494, -214, 554, -214, 740, -214, 831, -107, -107, 554, -107, 622, -214, 494, -54, -53, 587, -107, 554, -107, 494, -107, -107, 494, -107, -108, 554, -214, 587, -107, -107, 587, -54, -53, 554, -54, -53, 494, -107, 554, -107, 622, -107, 740, -107, 831, -107, 622, -107, 740, -107, 554, -107, 587, -107, 494, -107, 554, -107, 494, -107, 622, -214, 740, -107, -108, 831, -107, 622, -107, 740, -107, 554, -107, 587, -107, 494, -107, 554, -107, 622, -107, 587, -107, 554, -107, 494, -107, 554, -107, 587, -107, -108, 494, -107, 554, -107, 587, -107, 740, -107, 554, -107, 587, -107, 554, -107, 494, -107, 554, -107, -107, 494, -107, -107, 554, -107, -108, 740, -214, 831, -107, -107, 554, -107, 622, -214, 494, -54, -53, 587, -107, 554, -107, 494, -107, -107, 494, -107, -108, 554, -214, 587, -107, -107, 587, -54, -53, 554, -54, -54, 494, -107, 554, -107, 622, -107, 740, -107, 831, -107, 622, -107, 740, -107, 554, -107, 587, -107, 494, -107, 554, -107, 494, -107, 622, -214, 740, -107, -107, 831, -107, 622, -107, 740, -107, 554, -107, 587, -107, 494, -107, 554, -107, 622, -107, 587, -107, 554, -107, 494, -107, 554, -107, 587, -107, -107, 494, -107, 554, -107, 587, -107, 740, -107, 554, -107, 587, -107, 554, -107, 494, -107, 554, -214, 494, -107, -108, 494, -107, -107, 494, -107, -107, 370, -107, 415, -107, 494, -107, -108, 370, -107, 415, -107, 494, -107, 554, -107, 622, -107, 554, -107, 659, -107, 622, -107, 659, -107, 740, -107, 494, -107, -107, 494, -107, -108, 370, -107, 415, -107, 494, -107, 415, -107, 659, -107, 622, -107, 554, -107, 494, -107, 370, -107, 311, -107, 330, -107, 370, -107, 494, -107, -108, 370, -107, 415, -107, 494, -107, -107, 370, -107, 415, -107, 494, -107, 494, -107, 554, -107, 622, -107, 494, -107, 370, -107, 415, -107, 370, -107, 494, -214, 494, -107, 466, -107, 494, -107, 370, -107, 415, -107, 494, -107, 659, -107, 622, -107, 659, -107, 740, -107, 494, -107, -108, 466, -107, -107, 494, -107, -107, 370, -107, 415, -107, 494, -107, -107, 370, -107, 415, -107, 494, -107, 554, -107, 622, -107, 554, -107, 659, -107, 622, -107, 659, -107, 740, -107, 494, -107, -108, 494, -107, -107, 370, -107, 415, -107, 494, -107, 415, -107, 659, -107, 622, -107, 554, -107, 494, -107, 370, -107, 311, -107, 330, -107, 370, -107, 494, -107, -107, 370, -107, 415, -107, 494, -107, -107, 370, -107, 415, -107, 494, -107, 494, -107, 554, -107, 622, -107, 494, -107, 370, -107, 415, -107, 370, -107, 494, -214, 494, -107, 466, -107, 494, -107, 370, -107, 415, -107, 494, -107, 659, -107, 622, -107, 659, -107, 740, -107, 494, -214, 554, 19};

//----------------------//----------------------//----------------------//----------------------//----------------------//----------------------//----------------------



struct Melody {             
  String name;   
  const int* data;         
  Melody(String _name, const int* _data):name(_name), data(_data) {}
  Melody(String _name, const byte* _data):name(_name), data((const int*)_data) {}
};    

Melody melodies[]={
  {"Blinding Lights", blindinglights},
  {"Entertainer", entertainer},
  {"Badinerie", badinerie},
  {"Nokia Tune", nokiaTune},
  {"Groovy Blue", groovyBlue},
  {"Nyan Cat", nyancat},
  {"Ukraine", ukraine},
  {"Was Woller Wir Trinken", wasWollenWirTrinken},
  {"Blue", blue},
  {"Toreador", toreador}
  // {"Mozart", mozart},
  // {"Mario", mario},
};

int getMelodyCount(){
   return sizeof(melodies)/sizeof(melodies[0]);
}

String getMelodyName(int index){
   return melodies[index].name;
}

const int* getMelodyData(int index){
   return melodies[index].data;
}





bool melodyPlayerLoopMelody = false;   
bool melodyPlayerCont = true;
String melodyPlayerMelodyName;
unsigned long melodyPlayerPlayStarted = 0;

void melodyPlayerSetMelodyName(String _name){
  melodyPlayerMelodyName=_name;
}
//return true if was played completely or false if interrupted
bool melodyPlayerPlayMelody(const int* melody) {
  Serial.println(F("Set mode: PlayMelody"));
  melodyPlayerPlayStarted = millis();
  modeLoop = melodyPlayerDrawScreen;
  modeButtonUp = 0;
  modeButtonCenter = 0;
  modeButtonDown = 0;
  modeButtonUpLong = melodyPlayerButtonUp;
  modeButtonCenterLong = 0;
  modeButtonDownLong = melodyPlayerButtonDown;
  enableAutoReturn = false;
  melodyPlayerCont = true;
  melodyPlayerLoopMelody = false;
  
  int length = melodyPlayerGetLength(melody);
  Serial.print("length="); Serial.println(length);
  int prequencyThreshold = 0;
  {//analyze melody
    long noteSum = 0;
    long noteCnt = 0;
    for (int i = 1; i < length - 1 && melodyPlayerCont; i++) {
      int n = (melody[i]);
      if (n > 0){
        noteSum += n;
        noteCnt ++;
      }
    }
    prequencyThreshold = 100 + noteSum/noteCnt;
    Serial.print("frequencyThreshold="); Serial.println(prequencyThreshold);
  }
  do{
    melodyPlayerDrawScreen();
    for (int i = 0; i < length - 1 && melodyPlayerCont; i++) {
      int n = (melody[i]);
      
      if(n > 0){
        buzTone(n);
        if(n>prequencyThreshold)
          ledFlashlightOnBottom();
        else
          ledFlashlightOnTop();
      }
      if(n < 0){
        long timeMs = -n;
        if(timeMs < 150){
          delay(timeMs);
        }
        else{
          long noteStarted = millis();
          while(millis() - noteStarted < timeMs){
            if((millis() - noteStarted)+150 < timeMs){
              buttonsLoop();
              melodyPlayerDrawScreen();
            }
          }
        }
        ledFlashlightOffAll();
        buzNoTone();
        //delay(13);
        buttonsLoop();
      }
       
    }
    ledFlashlightOffAll();
    buzNoTone();
    delay(500);
  }while(melodyPlayerLoopMelody);
  modeSetup();
  return melodyPlayerCont;
}

void melodyPlayerDrawScreen() {

  lcd()->setColorIndex(white);
  lcd()->drawBox(0, 0, 400, 240);

  lcd()->setFont(u8g2_font_10x20_t_cyrillic);  //ok
  lcd()->setCursor(5, 18); 
  lcd()->setColorIndex(black);
  lcd()->print("Плеєр");
  
  int x = drawStatusbar(363, 1, true);
  if(melodyPlayerLoopMelody)
    draw_ic16_repeat(x-16, 5, black);
  

  if(melodyPlayerCont){
    displayDrawVector(getPathZubat(), 130, 45, 3.0, 3, false, black);
    
    lcd()->setCursor(5, 230); 
    int sec = (millis()-melodyPlayerPlayStarted)/1000;
    if(sec < 10)
      lcd()->print("0");
    lcd()->print(sec);
    lcd()->print("s");

    int width = lcd()->getStrWidth(melodyPlayerMelodyName.c_str());
    lcd()->setCursor(200-width/2, 230); 
    lcd()->print(melodyPlayerMelodyName);
  }
  else{
    lcd()->setCursor(150, 120); 
    lcd()->print("Зупинка...");
  }



  lcd()->drawLine(369, 0, 369, 260);
  lcd()->drawLine(370, 0, 370, 260);
  draw_ic16_cancel(lx(), ly1(), black);
  draw_ic16_repeat(lx(), ly3(), black);
  lcd()->sendBuffer();
}


void melodyPlayerButtonUp(){
  melodyPlayerCont = false;
  melodyPlayerLoopMelody = false;
}
void melodyPlayerButtonDown(){
  melodyPlayerLoopMelody = !melodyPlayerLoopMelody;
}

void printBits(byte myByte) {
  for (byte mask = 0x80; mask; mask >>= 1) {
    if (mask & myByte)
      Serial.print('1');
    else
      Serial.print('0');
  }
}

int melodyPlayerGetLength(const int* melody) {
  for (int i = 0; i < 5000; i++) {
    //Serial.print("i="); Serial.println(i);
    int b = (melody[i]);
    if (b == 19) { //EOF
      return i + 1;
    }
  }
  return 5000;
}














