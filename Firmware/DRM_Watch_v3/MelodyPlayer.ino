const int entertainer[]={583, -214, 618, -214, 655, -214, 1040, -428, 655, -214, 1040, -428, 655, -214, 1040, -857, 1040, -214, 1167, -214, 1236, -214, 1310, -214, 1040, -214, 1167, -214, 1310, -428, 981, -214, 1167, -428, 1040, -857, -428, 583, -214, 618, -214, 655, -214, 1040, -428, 655, -214, 1040, -428, 655, -214, 1040, -857, -214, 874, -214, 779, -214, 735, -214, 874, -214, 1040, -214, 1310, -428, 1167, -214, 1040, -214, 874, -214, 1167, -857, 19};
const int badinerie[]={988, -241, 1175, -118, 988, -118, 740, -241, 988, -118, 740, -118, 587, -241, 740, -118, 587, -118, 494, -410, 370, -118, 494, -118, 587, -118, 494, -118, 554, -118, 494, -118, 554, -118, 494, -118, 466, -118, 554, -118, 659, -118, 554, -118, 587, -241, 494, -241, 988, -241, 1175, -118, 988, -118, 740, -241, 988, -118, 740, -118, 587, -241, 740, -118, 587, -118, 494, -410, 587, -241, 587, -241, 587, -82, 587, -82, 988, -241, 587, -241, 587, -56, 659, -56, 587, -56, 659, -56, 554, -241, 740, -82, 740, -82, 740, -241, 740, -241, 1175, -241, 740, -241, 740, -56, 784, -56, 740, -56, 784, -56, 698, -241, 554, -118, 740, -118, 880, -118, 740, -118, 831, -118, 740, -118, 831, -118, 740, -118, 698, -118, 831, -118, 988, -118, 831, -118, 880, -118, 831, -118, 880, -118, 831, -118, 740, -118, 880, -118, 740, -123, 698, -123, 740, -118, 988, -118, 740, -123, 698, -123, 740, -118, 1109, -118, 740, -123, 698, -123, 740, -118, 1175, -118, 740, -123, 698, -123, 740, -118, 1175, -118, 1109, -118, 988, -118, 1109, -118, 880, -118, 831, -118, 740, -118, 880, -241, 831, -56, 880, -56, 831, -56, 880, -56, 740, -410, 988, -241, 1175, -118, 988, -118, 740, -241, 988, -118, 740, -118, 587, -241, 740, -118, 587, -118, 494, -410, 370, -118, 494, -118, 587, -118, 494, -118, 554, -118, 494, -118, 554, -118, 494, -118, 466, -118, 554, -118, 659, -118, 554, -118, 587, -241, 494, -241, 988, -241, 1175, -118, 988, -118, 740, -241, 988, -118, 740, -118, 587, -241, 740, -118, 587, -118, 494, -410, 587, -241, 587, -241, 587, -82, 587, -82, 988, -241, 587, -241, 587, -56, 659, -56, 587, -56, 659, -56, 554, -241, 740, -82, 740, -82, 740, -241, 740, -241, 1175, -241, 740, -241, 740, -56, 784, -56, 740, -56, 784, -56, 698, -241, 554, -118, 740, -118, 880, -118, 740, -118, 831, -118, 740, -118, 831, -118, 740, -118, 698, -118, 831, -118, 988, -118, 831, -118, 880, -118, 831, -118, 880, -118, 831, -118, 740, -118, 880, -118, 740, -123, 698, -123, 740, -118, 988, -118, 740, -123, 698, -123, 740, -118, 1109, -118, 740, -123, 698, -123, 740, -118, 1175, -118, 740, -123, 698, -123, 740, -118, 1175, -118, 1109, -118, 988, -118, 1109, -118, 880, -118, 831, -118, 740, -118, 880, -241, 831, -56, 880, -56, 831, -56, 880, -56, 740, -410, 740, -241, 880, -118, 740, -118, 554, -241, 740, -118, 554, -118, 440, -241, 554, -118, 440, -118, 370, -410, 523, -246, 494, -241, 659, -246, 622, -118, 740, -118, 880, -241, 784, -118, 740, -118, 784, -241, 659, -241, 784, -241, 988, -118, 784, -118, 659, -241, 784, -118, 659, -118, 554, -241, 659, -118, 554, -118, 440, -410, 440, -118, 587, -118, 740, -118, 587, -118, 659, -118, 587, -118, 659, -118, 587, -118, 554, -118, 659, -118, 784, -118, 659, -118, 740, -118, 659, -118, 740, -118, 659, -118, 587, -118, 740, -118, 587, -123, 554, -123, 587, -118, 784, -118, 587, -123, 554, -123, 587, -118, 880, -118, 587, -123, 554, -123, 587, -118, 988, -118, 587, -123, 554, -123, 587, -118, 988, -118, 880, -118, 784, -118, 880, -118, 740, -118, 659, -118, 587, -118, 740, -241, 659, -56, 740, -56, 659, -56, 740, -56, 587, -410, 740, -82, 740, -82, 740, -82, 740, -82, 1175, -241, 740, -241, 740, -56, 784, -56, 740, -56, 784, -56, 659, -241, 659, -82, 659, -82, 659, -241, 659, -241, 1109, -241, 659, -241, 659, -56, 740, -56, 659, -56, 740, -56, 587, -241, 988, -241, 1175, -118, 988, -118, 880, -61, 784, -492, 784, -179, 988, -56, 880, -56, 784, -56, 740, -56, 659, -492, 659, -241, 784, -61, 740, -61, 659, -61, 587, -56, 523, -118, 659, -118, 784, -118, 659, -118, 523, -118, 494, -118, 523, -118, 494, -118, 466, -82, 370, -82, 392, -174, 370, -82, 494, -241, 466, -118, 554, -118, 659, -241, 587, -118, 554, -118, 587, -241, 494, -61, 554, -61, 587, -61, 659, -61, 740, -241, 587, -118, 740, -118, 988, -241, 740, -241, 659, -118, 587, -118, 554, -118, 587, -118, 554, -31, 494, -410, 740, -241, 880, -118, 740, -118, 554, -241, 740, -118, 554, -118, 440, -241, 554, -118, 440, -118, 370, -410, 523, -246, 494, -241, 659, -246, 622, -118, 740, -118, 880, -241, 784, -118, 740, -118, 784, -241, 659, -241, 784, -241, 988, -118, 784, -118, 659, -241, 784, -118, 659, -118, 554, -241, 659, -118, 554, -118, 440, -410, 440, -118, 587, -118, 740, -118, 587, -118, 659, -118, 587, -118, 659, -118, 587, -118, 554, -118, 659, -118, 784, -118, 659, -118, 740, -118, 659, -118, 740, -118, 659, -118, 587, -118, 740, -118, 587, -123, 554, -123, 587, -118, 784, -118, 587, -123, 554, -123, 587, -118, 880, -118, 587, -123, 554, -123, 587, -118, 988, -118, 587, -123, 554, -123, 587, -118, 988, -118, 880, -118, 784, -118, 880, -118, 740, -118, 659, -118, 587, -118, 740, -241, 659, -56, 740, -56, 659, -56, 740, -56, 587, -410, 740, -82, 740, -82, 740, -82, 740, -82, 1175, -241, 740, -241, 740, -56, 784, -56, 740, -56, 784, -56, 659, -241, 659, -82, 659, -82, 659, -241, 659, -241, 1109, -241, 659, -241, 659, -56, 740, -56, 659, -56, 740, -56, 587, -241, 988, -241, 1175, -118, 988, -118, 880, -61, 784, -492, 784, -179, 988, -56, 880, -56, 784, -56, 740, -56, 659, -492, 659, -241, 784, -61, 740, -61, 659, -61, 587, -56, 523, -118, 659, -118, 784, -118, 659, -118, 523, -118, 494, -118, 523, -118, 494, -118, 466, -82, 370, -82, 392, -174, 370, -82, 494, -241, 466, -118, 554, -118, 659, -241, 587, -118, 554, -118, 587, -241, 494, -61, 554, -61, 587, -61, 659, -61, 740, -241, 587, -118, 740, -118, 988, -294, 740, -294, 659, -144, 587, -144, 554, -144, 587, -144, 554, -63, 494, -833, 19};
const int nokiaTune[]={1558, -133, 1388, -133, 874, -267, 981, -267, 1310, -133, 1167, -133, 694, -267, 779, -267, 1167, -133, 1040, -133, 655, -267, 779, -267, 1040, -1071, 19};
const int groovyBlue[]={1388, -120, -1920, 1040, -120, 1236, -120, 1040, -120, 1236, -120, 1388, -120, -1920, 1040, -120, 1236, -120, 1040, -120, 1236, -120, 1388, -240, 694, -120, -240, 694, -120, -240, 694, -120, -240, 694, -120, -240, 694, -120, -240, 694, -120, -240, 1040, -120, 1236, -120, 1040, -120, 1236, -120, 1388, -240, 1388, -120, -240, 1388, -120, -240, 1388, -120, -240, 1388, -120, -240, 1388, -120, -240, 1388, -120, -240, 1040, -120, 1236, -120, 1040, -120, 1236, -120, 1388, -240, 1388, -120, 1650, -240, 1388, -120, 1853, -240, 1388, -120, -240, 1388, -120, 1650, -240, 1388, -120, 1853, -120, -120, 1388, -120, -240, 1040, -120, 1236, -120, 1040, -120, 1236, -120, 1388, -240, 1388, -120, 1650, -240, 1388, -120, 1853, -240, 1388, -120, -240, 1388, -120, 1650, -240, 1388, -120, 1853, -120, -120, 1388, -120, -240, 1040, -120, 1236, -120, 1040, -120, 1236, -120, 1388, -240, 1388, -120, 1650, -240, 1388, -120, 1963, -240, 1388, -120, 1853, -240, 1388, -120, 1749, -240, 1388, -120, 1650, -240, 1388, -120, 1558, -240, -480, 1040, -120, 1236, -120, 1040, -120, 1236, -120, 1388, -240, 19};
const int ukraine[]={554, -248, 554, -332, 494, -325, 554, -267, 587, -241, 659, -969, 587, -253, 554, -615, 494, -587, 440, -640, 554, -609, 415, -633, 554, -562, 370, -320, 349, -310, 370, -310, 415, -316, 440, -651, 494, -544, 554, -955, 554, -278, 554, -340, 494, -359, 554, -302, 587, -247, 659, -961, 587, -287, 554, -611, 494, -628, 440, -587, 370, -659, 554, -674, 349, -675, 370, -1336, 370, -749, 415, -917, 415, -297, 554, -330, 494, -315, 440, -347, 415, -389, 370, -318, 415, -349, 440, -353, 370, -362, 415, -619, 415, -577, 440, -578, 440, -585, 494, -574, 494, -576, 554, -1263, 554, -731, 415, -898, 415, -310, 554, -323, 494, -324, 440, -358, 415, -312, 370, -318, 415, -361, 440, -342, 370, -332, 415, -589, 415, -597, 440, -618, 554, -585, 415, -674, 554, -575, 370, -348, 415, -338, 440, -346, 494, -284, 554, -642, 587, -650, 659, -982, 622, -287, 659, -625, 554, -623, 494, -559, 494, -576, 659, -323, 587, -292, 554, -336, 494, -328, 440, -558, 440, -596, 494, -568, 494, -609, 554, -907, 494, -294, 440, -331, 494, -289, 554, -290, 587, -218, 659, -965, 622, -214, 659, -609, 554, -590, 494, -606, 494, -568, 659, -338, 587, -307, 554, -245, 494, -237, 440, -579, 370, -590, 554, -603, 349, -659, 370, -1330, 370, -750, 659, -930, 622, -249, 659, -605, 554, -603, 494, -603, 494, -579, 659, -341, 587, -322, 554, -279, 494, -244, 440, -617, 440, -610, 494, -562, 494, -610, 554, -935, 494, -266, 440, -346, 494, -263, 554, -273, 587, -234, 659, -1004, 622, -240, 659, -637, 554, -666, 494, -590, 494, -586, 659, -319, 587, -268, 554, -305, 494, -269, 440, -572, 370, -646, 554, -732, 349, -730, 370, -1338, 370, -776, 19};
const int blindinglights[]={698, -678, 698, -508, 622, -169, 698, -169, 784, -339, 523, -339, 622, -508, 698, -678, 698, -508, 622, -169, 698, -169, 784, -339, 523, -339, 622, -508, 932, -169, 784, -339, 698, -339, 622, -508, 932, -169, 784, -339, 698, -339, 622, -339, 698, -2205, 523, -169, 466, -169, 523, -169, 466, -169, 523, -2035, 523, -169, 466, -169, 523, -169, 466, -169, 622, -339, 466, -169, 466, -339, 523, -169, 392, -1017, 523, -169, 466, -169, 523, -169, 466, -169, 622, -339, 466, -169, 466, -339, 523, -169, 392, -1017, 466, -339, 523, -339, 349, -1865, 466, -169, 523, -169, 466, -169, 523, -169, 466, -169, 523, -2035, 523, -169, 466, -169, 523, -169, 466, -169, 622, -339, 466, -169, 466, -339, 523, -169, 392, -1017, 523, -169, 466, -169, 523, -169, 466, -169, 622, -339, 466, -169, 466, -339, 523, -169, 392, -1017, 466, -339, 523, -339, 349, -1865, 466, -169, 523, -169, 466, -169, 523, -169, 466, -169, 523, -339, 523, -339, 622, -169, 698, -339, 784, -339, 523, -339, 622, -339, 698, -508, 523, -339, 523, -339, 622, -169, 698, -339, 784, -339, 523, -339, 622, -339, 698, -508, 523, -339, 622, -169, 698, -339, 784, -339, 523, -339, 622, -339, 698, -508, 587, -678, 523, -678, 466, -508, 1047, -339, 622, -508, 698, -2205, 698, -169, 784, -339, 698, -339, 622, -169, 622, -339, 523, -169, 622, -508, 523, -678, 622, -508, 932, -169, 784, -339, 698, -339, 622, -508, 932, -169, 784, -339, 698, -339, 622, -847, 698, -1526, 784, -339, 622, -508, 698, -2205, 698, -169, 784, -339, 698, -339, 622, -169, 622, -339, 523, -169, 622, -508, 523, -678, 622, -169, 622, -339, 932, -169, 784, -339, 698, -339, 622, -508, 932, -169, 784, -339, 698, -339, 622, -847, 698, -678, 698, -678, 698, -678, 698, -339, 698, -678, 698, -508, 622, -169, 698, -169, 784, -339, 523, -339, 622, -508, 698, -678, 698, -508, 622, -169, 698, -169, 784, -339, 523, -339, 622, -508, 932, -169, 784, -339, 698, -339, 622, -508, 932, -169, 784, -339, 698, -339, 622, -339, 698, -2035, 466, -169, 523, -169, 466, -169, 523, -169, 466, -169, 523, -1865, 392, -169, 523, -169, 466, -169, 523, -169, 466, -169, 622, -339, 466, -169, 466, -339, 523, -169, 392, -1017, 523, -169, 466, -169, 523, -169, 466, -169, 622, -339, 466, -169, 466, -339, 523, -169, 392, -1017, 466, -339, 523, -339, 349, -1356, 622, -339, 587, -339, 523, -339, 466, -339, 523, -339, 523, -339, 622, -169, 698, -339, 784, -339, 523, -339, 622, -339, 698, -508, 523, -339, 523, -339, 622, -169, 698, -339, 784, -339, 932, -339, 622, -339, 698, -847, 523, -339, 622, -169, 698, -339, 784, -339, 523, -339, 622, -339, 698, -508, 587, -678, 523, -678, 466, -508, 1047, -339, 622, -508, 698, -2205, 698, -169, 784, -339, 698, -339, 622, -169, 622, -339, 523, -169, 622, -508, 523, -678, 622, -508, 932, -169, 784, -339, 698, -339, 622, -508, 932, -169, 784, -339, 698, -339, 622, -847, 698, -1526, 784, -339, 622, -508, 698, -2205, 698, -169, 784, -339, 698, -339, 622, -169, 622, -339, 523, -169, 622, -508, 523, -678, 622, -508, 932, -169, 784, -339, 698, -339, 622, -508, 932, -169, 784, -339, 698, -339, 622, -847, 698, -1696, 932, -169, 831, -169, 932, -169, 831, -169, 1047, -339, 784, -169, 784, -339, 698, -169, 698, -1017, 932, -169, 784, -169, 932, -169, 784, -169, 1047, -339, 784, -169, 784, -339, 698, -169, 698, -169, 622, -1187, 932, -339, 1047, -339, 784, -169, 784, -339, 698, -169, 784, -508, 698, -508, 932, -339, 932, -508, 831, -169, 784, -169, 698, -508, 784, -847, 784, -339, 622, -508, 698, -2205, 698, -169, 784, -339, 698, -339, 622, -169, 622, -339, 523, -169, 622, -508, 523, -678, 622, -508, 932, -169, 784, -339, 698, -339, 622, -508, 932, -169, 784, -339, 698, -339, 622, -847, 698, -678, 698, -678, 698, -678, 698, -339, 698, -678, 698, -508, 622, -169, 698, -169, 784, -339, 523, -339, 622, -508, 698, -678, 698, -508, 622, -169, 698, -169, 784, -339, 523, -339, 622, -508, 932, -169, 784, -339, 698, -339, 622, -508, 932, -169, 784, -339, 698, -339, 622, -339, 698, -2883, 698, -678, 698, -508, 622, -169, 698, -169, 784, -339, 523, -339, 622, -508, 698, -678, 698, -508, 622, -169, 698, -169, 784, -339, 523, -339, 622, -508, 932, -169, 784, -339, 698, -339, 622, -508, 932, -169, 784, -339, 698, -339, 622, -339, 698, -2035, 784, -339, 622, -508, 698, -2205, 698, -169, 784, -339, 698, -339, 622, -169, 622, -339, 523, -169, 622, -508, 523, -678, 622, -508, 932, -169, 784, -339, 698, -339, 622, -508, 932, -169, 784, -339, 698, -339, 622, -847, 698, -2374, 19};
//const int wasWollenWirTrinken[]={1175, -83, 1175, -102, 1047, -130, 988, -145, 1047, -444, 880, -318, 784, -68, 880, -186, 1175, -102, 1175, -197, 1047, -173, 988, -233, 1175, -88, 1175, -143, 1047, -115, 988, -179, 1047, -470, 880, -300, 988, -254, 784, -213, 880, -599, 1175, -92, 1175, -111, 1047, -126, 988, -122, 1047, -444, 880, -320, 784, -72, 880, -186, 1175, -102, 1175, -195, 1047, -169, 988, -234, 1175, -89, 1175, -141, 1047, -114, 988, -177, 1047, -470, 880, -300, 988, -252, 784, -213, 880, -610, 880, -252, 1047, -239, 1175, -182, 1319, -279, 1319, -320, 1397, -246, 1175, -208, 1319, -567, 1175, -81, 1175, -92, 1047, -143, 988, -155, 1047, -401, 880, -290, 784, -109, 880, -153, 1175, -97, 1175, -244, 1047, -190, 988, -218, 1175, -101, 1175, -122, 1047, -135, 988, -145, 1047, -463, 880, -285, 988, -261, 784, -247, 880, -691, 880, -211, 1047, -218, 1175, -162, 1319, -279, 1319, -320, 1397, -247, 1175, -209, 1319, -566, 1175, -81, 1175, -94, 1047, -141, 988, -158, 1047, -401, 880, -290, 784, -110, 880, -152, 1175, -96, 1175, -245, 1047, -192, 988, -219, 1175, -102, 1175, -119, 1047, -137, 988, -145, 1047, -461, 880, -284, 988, -262, 784, -244, 880, -749, 19};
const int toreador[]={1040, -363, 1167, -363, 1040, -90, 874, -363, 874, -363, 874, -181, -90, 779, -90, 874, -363, 926, -90, 874, -363, -363, 926, -363, 779, -363, 1040, -90, 874, -363, -363, 694, -363, 583, -363, 779, -90, 520, -363, -363, 779, -727, 779, -181, 1167, -181, 1040, -181, 926, -181, 874, -181, -45, 779, -181, 874, -181, 926, -181, 874, -363, -363, 655, -363, 874, -363, 874, -363, 825, -181, 981, -181, 1310, -1454, -181, 1167, -45, 1310, -90, 1167, -45, 1101, -181, 1167, -181, 779, -181, 874, -181, 926, -363, -181, 874, -45, 926, -90, 874, -45, 694, -181, 1167, -181, 1040, -727, -363, 694, -45, 779, -90, 694, -45, 520, -181, 926, -181, 874, -181, -181, 779, -181, -181, 694, -181, -727, -727, 19};
const int wasWollenWirTrinken[]={11, 92, -101, -304, 92, -102, -304, 92, -34, -104, -1, 587, -67, -131, -1, -1, 440, -44, 587, -10, 1174, -28, 92, -14, -1, 440, -48, 523, -2, -50, -1, 1046, -4, 493, -105, 440, -6, 987, -1, -80, -4, -1, -1, -1, 92, -29, 82, -1, 65, -59, 55, -94, -8, 92, -31, 523, -35, 440, -12, 1046, -90, -31, -1, -2, 92, -28, 82, -1, 65, -61, 55, -78, -28, 329, -12, 440, -14, 92, -3, 880, -31, -38, -1, 293, -37, 391, -10, 783, -6, -44, -1, -1, 92, -29, 82, -1, 329, -51, 65, -10, 440, -3, 880, -55, 55, -1, -44, -1, 92, -29, 587, -31, 440, -1, 1174, -19, -118, -1, -1, 92, -29, 82, -1, 440, -60, 587, -8, 1174, -58, -38, -1, 92, -29, 82, -1, -17, 55, -23, 82, -7, -19, 440, -12, 523, -6, 82, -12, 1046, -10, -8, 82, -31, 220, -16, -3, -2, -1, 92, -31, 65, -60, 391, -8, 493, -10, 48, -60, 987, -19, -4, -1, 92, -28, 391, -26, 587, -10, 1174, -5, -129, -1, -1, 92, -29, 82, -1, 391, -10, 587, -4, 65, -46, -3, -1, 1174, -15, 523, -28, 391, -4, 1046, -44, -5, -1, 92, -29, 48, -25, 493, -86, 391, -4, 195, -52, -6, -1, -1, 92, -29, 82, -1, 65, -59, 43, -85, -17, 92, -31, 349, -19, 523, -20, 1046, -120, -10, -1, -2, 92, -28, 82, -2, 65, -60, -106, 92, -30, 349, -2, 440, -12, 43, -71, -3, -1, -2, 92, -28, 82, -1, 65, -61, 293, -42, 493, -46, -14, -1, 987, -8, 92, -21, 82, -1, -17, 48, -16, 82, -15, -18, 82, -31, 293, -8, 391, -6, -3, 783, -25, 82, -6, 195, -16, -4, -1, -1, 92, -29, 82, -1, 65, -61, 55, -99, -3, 92, -31, -171, -1, 92, -31, 65, -61, 880, -1, 55, -101, -4, 92, -30, -171, -1, 329, -14, 440, -6, 92, -10, 65, -63, 55, -99, -3, -1, -1, 92, -31, 1174, -29, 440, -12, 587, -1, 587, -15, -107, -2, -1, -1, 92, -29, 82, -1, 440, -10, 587, -8, 1174, -25, 587, -12, 65, -3, -2, -1, -1, 523, -48, 523, -42, -6, -1, -1, 1046, -1, 55, -12, 116, -17, 82, -1, -15, 82, -30, 493, -10, 987, -4, 987, -3, 82, -31, -19, 493, -16, 82, -15, -3, -2, -1, -1, 92, -29, 82, -1, 220, -23, 65, -37, 1046, -81, 55, -10, -10, 92, -31, 523, -35, 523, -10, 440, -1, -21, 220, -53, 1046, -16, -29, -1, -1, -1, 92, -29, 82, -1, 65, -61, 880, -57, 55, -21, -27, 329, -12, 440, -17, 92, -1, 440, -23, 220, -4, 880, -3, -35, -1, -2, 293, -37, 391, -10, 783, -8, 783, -19, 391, -14, -5, -2, -1, -1, -1, 92, -29, 82, -1, 329, -48, 65, -10, -4, 880, -10, 440, -10, 220, -28, 880, -4, 55, -1, -42, -1, -1, 92, -31, 587, -29, 440, -3, 1174, -12, 1174, -4, 587, -7, -108, -1, -2, -1, -1, 92, -29, 82, -1, 220, -18, 1174, -34, 440, -5, 587, -8, 1174, -58, -35, -2, -1, -1, 92, -29, 82, -1, -14, 220, -17, 55, -5, 82, -8, 1046, -6, 523, -12, 440, -12, 523, -8, 82, -10, 1046, -7, -10, 82, -31, -17, -3, -1, -2, -1, 92, -28, 82, -2, 195, -21, 987, -23, 65, -16, 391, -6, 493, -10, 493, -10, 48, -50, 987, -19, -1, -1, -2, 92, -30, 391, -23, 587, -10, 1174, -6, 587, -19, -7, 195, -79, -20, -2, -1, -1, 92, -29, 82, -1, 391, -10, 587, -3, 587, -42, 65, -3, -2, -1, -1, 1174, -14, 523, -29, 391, -3, 1046, -44, -4, -1, -1, -1, 92, -29, 48, -23, 195, -6, 493, -28, 987, -8, 493, -42, 391, -3, -53, -4, -1, -1, -1, 92, -29, 82, -1, 174, -48, 65, -13, 43, -84, -17, 1046, -3, 92, -28, 349, -18, 523, -21, 523, -8, -21, 174, -67, 1046, -23, -8, -1, -1, -1, 92, -29, 82, -1, 65, -61, 880, -27, 440, -46, -31, -2, 92, -28, 349, -1, 440, -13, 174, -23, 43, -48, -4, -1, -1, -1, 92, -29, 82, -1, -61, 987, -39, 293, -2, 493, -44, 493, -7, -4, 195, -1, -1, -1, 987, -6, 92, -23, 82, -1, -15, 48, -16, 783, -12, 82, -1, -19, 391, -28, 82, -3, 293, -8, 391, -5, -4, 783, -25, 82, -6, -16, -4, -1, -1, -1, -8, -1, 92, -19, 82, -1, 220, -48, 65, -13, 55, -96, -4, 92, -31, -69, 220, -57, -44, -1, 92, -31, 440, -55, 329, -1, 65, -4, 880, -10, 55, -92, -3, 880, -29, 92, -1, 220, -35, -136, -1, 92, -31, 65, -62, -4, 220, -58, 55, -35, -6, -1, 92, -31, 880, -78, 440, -53, 261, -31, -5, -2, -1, -1, -1, 92, -25, 82, -2, 220, -37, 1046, -10, 65, -12, 329, -38, 523, -10, 1046, -52, -4, -1, -1, -3, 55, -8, 116, -17, -16, 220, -12, 1174, -8, 82, -10, -19, 82, -31, 1174, -18, 82, -31, 349, -8, 587, -1, -5, -2, -1, -1, -6, 92, -20, 82, -2, 261, -39, 65, -21, 1318, -17, 65, -73, -10, 92, -31, 1318, -1, 391, -6, 659, -17, -44, 261, -60, -40, -1, -1, -3, 92, -26, 65, -62, 1318, -17, -88, 92, -31, 1318, -31, 261, -10, 659, -12, 391, -14, 65, -70, 130, -28, -4, -1, -1, -3, 92, -28, 65, -60, -2, 440, -80, -21, -1, 1396, -3, 698, -10, 293, -1, -6, 92, -8, -16, 82, -31, 1174, -1, -17, 82, -31, -18, 73, -21, 82, -10, 587, -15, 349, -1, -3, -2, -1, 293, -1, 92, -27, 82, -2, 261, -33, 65, -27, -101, 65, -13, 92, -18, -70, 261, -57, -44, -1, 1318, -3, 92, -28, 1318, -35, 65, -25, -108, 65, -3, 92, -28, 261, -29, 391, -60, 659, -12, -67, -2, 92, -30, 65, -63, -4, 261, -84, -17, -1, -5, 92, -26, 1174, -21, 65, -1, 1174, -10, 587, -5, 349, -6, 130, -120, -3, -1, -2, -1, -3, 92, -26, 82, -1, 246, -31, 1174, -7, 349, -8, -12, -1, 587, -4, -1, -8, 1046, -73, 329, -6, -3, -2, 523, -10, 1046, -3, 92, -16, -17, 987, -29, 82, -1, 246, -8, -10, 987, -27, 82, -3, 61, -4, 293, -8, -5, 82, -31, 246, -17, -5, -1, -2, -20, -4, 92, -3, 82, -1, 220, -57, 65, -3, -101, 55, -3, 92, -28, 1046, -10, 523, -50, -8, 329, -8, 1046, -25, 220, -23, -44, -2, -1, -3, 92, -25, 82, -2, 880, -58, 65, -1, -106, 55, -10, 92, -21, 880, -5, 261, -19, 220, -19, 440, -7, -8, -8, -1, -6, 391, -46, 783, -19, 783, -16, -1, -2, 246, -5, -1, -1, 92, -31, 65, -63, -1, 880, -6, 880, -21, 440, -5, 220, -55, -12, -2, -7, 55, -6, -1, 92, -14, 1174, -24, 1174, -23, 587, -16, -4, 220, -35, -65, -1, -1, -8, 92, -21, 82, -1, 1174, -48, 65, -13, 220, -7, 349, -2, 587, -14, 1174, -80, -1, -1, -8, 92, -21, 82, -1, -15, 220, -21, 82, -10, 1046, -14, 55, -3, 82, -31, 523, -6, 329, -7, -4, 1046, -5, 82, -26, -6, -1, -1, 92, -29, 82, -1, 987, -37, 65, -24, 195, -12, 48, -65, 987, -5, 293, -17, -1, 493, -19, -1, -1, -8, 277, -25, 1174, -8, 1174, -16, -17, 587, -1, 349, -8, -90, -1, -1, 195, -6, 92, -23, 587, -51, 349, -1, 1174, -3, 65, -6, 1174, -3, -1, -15, 329, -67, 523, -3, -12, -2, 1046, -3, -1, 1046, -1, -8, 92, -14, 48, -59, 195, -3, 987, -23, 493, -44, 293, -8, 97, -28, -5, -1, -2, 92, -28, 82, -1, 174, -40, 65, -21, 1046, -27, 43, -63, -10, 92, -31, -69, 329, -12, 523, -21, 174, -28, 1046, -23, -16, -2, -1, -16, -2, 92, -10, 82, -1, 880, -58, 65, -1, -106, 92, -31, 880, -1, 261, -25, 174, -28, 440, -7, 43, -76, -26, 87, -3, -3, -2, -1, 92, -31, 987, -41, 65, -21, -101, -2, 293, -7, 493, -6, 987, -1, -1, 92, -13, -16, 783, -21, 82, -10, 48, -10, 195, -3, -4, 82, -30, -19, 82, -31, 246, -6, 391, -1, 783, -3, -1, -1, -2, -1, 92, -28, 82, -2, 220, -7, -51, 65, -1, 220, -55, 55, -31, -12, 92, -31, -69, 220, -40, -60, -2, 92, -31, 65, -60, 880, -1, 880, -78, -28, 92, -31, 55, -7, 220, -38, -124, -1, 92, -31, 261, -21, 440, -17, 65, -25, -3, 220, -72, -27, -1, 55, -2, -1, -5, 92, -24, 880, -60, 440, -55, 440, -8, 880, -16, 261, -23, -2, -1, -1, -1, -4, -1, 92, -23, 82, -1, 1046, -44, 220, -8, 65, -8, 523, -5, 329, -53, 523, -12, 1046, -12, -19, -1, -1, -8, -1, 116, -21, -17, 1174, -1, 55, -10, 220, -3, 82, -15, 587, -10, -7, 82, -31, 1174, -1, -17, 587, -25, 349, -4, 82, -1, -6, -1, -1, -8, 92, -21, 82, -1, 261, -40, 65, -21, 1318, -16, 659, -25, 65, -49, -10, 92, -31, 1318, -1, 391, -8, 659, -14, -44, 261, -61, -37, -1, -1, -2, -3, 92, -25, 82, -1, 65, -61, 1318, -16, -88, -2, 659, -18, 92, -10, 1318, -31, 261, -12, 659, -10, 391, -15, 65, -71, -28, -3, -1, -1, -4, -1, 92, -25, -63, 698, -74, 440, -5, -19, -1, -1, 1396, -4, 698, -10, 293, -1, -5, 92, -8, -17, 82, -31, 1174, -1, 587, -14, -1, 82, -31, -19, 73, -21, 82, -10, 587, -14, 349, -1, -4, -1, -1, 92, -29, 82, -1, 261, -35, 65, -26, -101, 65, -12, 92, -19, -69, 261, -57, -44, -1, 1318, -4, 92, -27, 1318, -35, 65, -26, -108, 65, -1, 92, -28, 659, -10, 261, -21, 391, -59, 659, -12, -67, -1, 92, -31, 65, -63, -3, 261, -85, -14, -1, -1, -2, -3, 92, -25, 1174, -21, 65, -1, 1174, -10, 587, -6, 349, -5, 587, -13, -107, -4, -1, -1, -6, -1, 92, -23, 246, -33, 1174, -8, 349, -8, -9, -2, 587, -1, 587, -3, -1, -8, 1046, -74, 329, -5, -2, -1, -1, 523, -3, 523, -6, 1046, -3, 92, -17, -16, 987, -29, 82, -1, 246, -8, 493, -3, -6, 987, -29, 82, -1, 61, -3, 293, -8, -6, 82, -30, -17, -3, -2, -1, -1, -21, -3, 92, -4, 82, -1, 220, -57, 65, -1, -104, 55, -3, 92, -27, 1046, -8, 523, -6, 523, -44, -10, 329, -5, 1046, -28, 220, -23, -42, -1, -1, -1, -4, 92, -25, 82, -1, 880, -58, 65, -2, 440, -1, -103, 55, -10, 92, -21, 880, -6, 261, -18, 220, -17, 440, -10, -8, -5, -1, -2, -5, 391, -46, 783, -19, 783, -17, -1, -3, -1, 246, -2, -1, -1, 92, -31, 440, -57, 65, -6, -1, 880, -7, 880, -19, 440, -6, 220, -55, -10, -1, -1, -10, 55, -3, -2, 92, -14, 1174, -23, 1174, -23, 587, -12, 587, -4, -3, 220, -35, -63, -1, -1, -2, -7, 92, -21, 82, -1, 1174, -49, 587, -10, 65, -1, 220, -8, 349, -1, 587, -14, -78, 1174, -2, -1, -10, 92, -21, -16, 220, -21, 82, -10, 523, -10, 1046, -1, 55, -6, 82, -31, 523, -5, 329, -8, -3, 1046, -8, 82, -23, -5, -1, -2, 92, -28, 82, -2, 987, -37, 65, -23, 195, -10, 493, -61, 48, -7, 987, -4, -14, 293, -1, -1, 493, -17, -1, -3, -8, 277, -23, 1174, -10, 1174, -17, 587, -8, -7, 587, -2, 349, -7, -88, -2, -1, -1, 195, -5, -2, 92, -21, 82, -1, 587, -48, 349, -4, 1174, -1, 65, -5, 587, -2, 1174, -1, -1, -14, 329, -67, 523, -4, -10, -1, -1, 1046, -6, -1, 523, -1, -8, 92, -12, 48, -57, 493, -1, 195, -4, 987, -23, 493, -42, 293, -10, -27, -6, -1, -1, 92, -29, 82, -1, 174, -39, 65, -21, 1046, -29, 43, -61, -10, 92, -30, 523, -33, -36, 329, -12, 523, -21, 174, -27, 1046, -23, -15, -1, -1, -19, -1, 92, -10, 880, -60, 65, -2, -105, 92, -31, 880, -1, 261, -26, 174, -27, 440, -8, 43, -78, -23, -3, -4, -1, -1, 92, -31, 987, -42, 65, -21, 493, -82, -17, -1, -1, 293, -8, 493, -5, 987, -2, -1, 92, -12, -16, 783, -21, 82, -10, 48, -8, 195, -6, -3, 391, -17, 82, -14, -19, 82, -31, 246, -5, 391, -1, 783, -1, -4, -1, -1, -1, 92, -28, 82, -1, 220, -10, 880, -37, -12, 220, -57, 55, -30, -13, 92, -30, -70, 220, -42, -58, -1, 92, -31, 65, -60, -108, 880, -21, 92, -10, 55, -8, 220, -37, 440, -6, 440, -16, 261, -17, -85, -1, 92, -31, 65, -1, -4, 220, -71, -29, 55, -1, 92, -29, 587, -19, -26, -1, -2, 92, -28, 82, -1, 220, -53, 65, -8, -0, 587, -13, -88, -1, 523, -23, 116, -5, 82, -2, -16, 55, -10, 220, -6, 82, -14, -19, 493, -3, 82, -10, -18, 82, -31, 220, -17, -3, -1, -1, 184, -31, 164, -47, 65, -14, 55, -92, -10, -1, 92, -29, 184, -1, 110, -33, 523, -97, -33, -1, -1, 92, -29, 184, -1, 110, -39, 164, -2, 65, -18, 55, -78, -28, -1, 440, -21, 92, -8, 184, -1, 164, -25, -141, -2, -1, 92, -29, 184, -1, 110, -33, 164, -12, 65, -12, 55, -39, -44, -1, 440, -3, 92, -25, 184, -2, 110, -27, 164, -6, 587, -13, -95, -1, -1, 92, -29, 184, -0, 110, -33, 164, -8, 65, -19, -105, -1, 587, -15, 92, -14, 184, -1, 55, -19, 110, -3, 164, -17, 523, -65, 220, -39, -4, -1, -1, 92, -29, 184, -1, 97, -25, 146, -6, 65, -28, 48, -82, 493, -3, -17, -1, 92, -29, 184, -1, 97, -29, 146, -7, 587, -35, -84, -1, -2, 92, -11, 184, -2, 97, -35, 146, -12, 65, -12, -3, 587, -10, -87, -1, 523, -25, 92, -3, 184, -2, 48, -23, 146, -14, 493, -32, 195, -57, -3, -1, -2, 184, -30, 130, -42, 87, -17, 65, -1, 43, -86, -16, -1, 92, -29, 184, -1, 130, -0, -136, -1, -1, 523, -8, 92, -21, 184, -1, 130, -37, 87, -10, 65, -12, -106, -1, 92, -29, 184, -1, 130, -16, 87, -2, 43, -44, 440, -21, -3, -2, -1, 92, -29, 184, -1, 146, -4, 97, -12, 65, -10, 493, -104, -1, 92, -28, 184, -2, 48, -33, 97, -9, 146, -12, 391, -44, 195, -55, -3, -1, -2, 92, -28, 184, -1, 110, -33, 164, -13, 65, -14, 55, -99, -3, -1, 92, -29, 184, -1, 110, -19, 164, -3, 220, -143, -4, -1, 92, -29, 184, -1, 110, -31, 164, -10, 65, -18, 440, -10, 55, -88, -6, -1, 92, -29, 184, -1, 110, -23, 164, -1, 195, -142, -4, -1, -1, 92, -29, 184, -1, 110, -35, 164, -9, 65, -3, 55, -99, -4, -1, -1, 92, -29, 184, -1, 164, -31, 110, -3, 587, -1, 440, -23, 587, -2, 329, -96, -3, -1, -2, 92, -10, 184, -1, 110, -42, 164, -4, 587, -14, -1, -1, 587, -10, 440, -52, 523, -1, -1, -2, -1, 523, -5, 55, -6, 116, -16, 184, -2, 110, -30, 164, -2, 440, -27, 493, -1, 493, -63, -4, -1, -1, -1, 92, -29, 184, -1, 164, -44, 65, -17, 55, -90, -10, -1, 92, -29, 184, -1, 440, -25, 110, -8, 523, -1, 523, -49, -33, -2, -1, -1, 92, -27, 184, -4, 164, -37, 65, -21, 55, -78, -28, -1, 440, -21, 92, -8, 184, -1, 329, -3, 440, -17, 164, -7, -108, -1, -1, -2, 92, -28, 184, -1, 110, -33, 164, -13, 65, -14, 329, -24, 440, -15, 55, -16, -44, -2, -1, 440, -1, 92, -27, 184, -2, 110, -25, 164, -5, 587, -29, 440, -1, 587, -8, -70, -1, -1, -1, 92, -29, 184, -1, 110, -31, 164, -1, 65, -18, 587, -28, 440, -1, -76, -1, -1, 587, -13, 92, -16, 184, -1, 55, -38, 110, -3, 164, -17, 440, -0, 523, -1, 523, -36, 220, -39, -4, -1, -1, -1, 92, -29, 184, -1, 97, -23, 146, -6, 65, -31, 391, -9, 493, -0, 48, -57, 493, -3, -17, -1, -1, 92, -29, 184, -1, 97, -27, 146, -10, 587, -23, 587, -21, -80, -1, -1, -2, 92, -27, 184, -3, 97, -29, 146, -12, 65, -12, 587, -1, -1, -1, 587, -8, 523, -37, 391, -1, -1, -2, -1, 523, -23, 92, -5, 184, -2, 48, -21, 146, -14, 493, -57, 391, -6, 493, -5, 195, -36, -4, -1, -1, -1, 92, -29, 184, -1, 130, -40, 87, -14, 65, -6, 43, -84, -17, -1, 92, -29, 184, -1, 349, -17, 523, -5, 87, -10, -70, -2, -1, -1, 523, -6, 92, -20, 184, -4, 130, -35, 87, -10, 65, -12, -106, -1, 92, -29, 184, -1, 349, -5, 440, -19, 87, -12, 43, -29, 440, -21, -3, -1, -2, -1, 92, -28, 184, -2, 146, -33, 97, -14, 65, -5, 391, -55, 493, -1, 493, -44, -2, -1, 92, -28, 184, -2, 48, -30, 97, -0, 146, -9, 391, -44, 293, -18, 391, -10, 293, -26, -3, -1, -1, -1, 92, -29, 184, -1, 110, -31, 164, -12, 65, -17, 55, -97, -3, -1, 92, -29, 184, -1, 110, -19, 164, -3, 329, -129, 220, -14, 440, -1, -2, -1, -1, 92, -27, 184, -4, 440, -1, 110, -27, 164, -10, 65, -19, 55, -99, -6, -1, 92, -29, 184, -1, 164, -23, 195, -143, -3, -1, -2, 92, -28, 184, -1, 110, -36, 164, -15, 65, -1, 55, -101, -3, -2, 92, -28, 184, -1, 164, -33, 110, -4, 440, -8, 220, -15, -3, -1, -1, 92, -29, 184, -1, 110, -42, 164, -3, 65, -15, 523, -61, -21, -1, 55, -15, 116, -14, 184, -1, 110, -33, 164, -1, 587, -11, -4, -1, -1, 184, -31, 195, -39, 65, -21, 65, -93, -10, -1, 92, -29, 184, -1, 659, -12, 195, -16, -71, -1, -1, 92, -29, 184, -1, 195, -49, 130, -1, 65, -10, -105, -2, 92, -28, 184, -1, 195, -40, 659, -6, 65, -87, 195, -28, -5, -1, -1, 92, -29, 184, -1, 146, -49, 195, -5, 65, -1, -103, -1, 698, -15, 92, -14, 184, -1, 195, -46, 587, -48, 73, -17, -4, -1, -1, 92, -29, 184, -1, 195, -39, 65, -21, -104, -1, 65, -10, 92, -19, 184, -1, 130, -27, 195, -6, 195, -133, -3, -1, 659, -13, 92, -16, 184, -1, 130, -33, 195, -4, 65, -23, -105, 65, -2, 92, -28, 184, -1, 195, -29, 130, -4, -135, -1, -1, 92, -29, 184, -1, 130, -37, 195, -4, 65, -13, -105, -1, 92, -29, 184, -1, 65, -23, 195, -6, 130, -3, 587, -3, 195, -18, -4, -1, -1, 92, -29, 184, -1, 195, -0, 123, -3, 65, -12, -4, 587, -3, -97, -1, 523, -27, 92, -2, 184, -1, 195, -27, 123, -6, 61, -71, 493, -21, 195, -25, -3, -1, -2, 92, -28, 184, -2, 110, -39, 164, -6, 65, -14, -103, 55, -2, 92, -28, 184, -1, 164, -29, 110, -4, 523, -72, -29, -1, -1, 92, -29, 184, -1, 164, -35, 110, -4, 65, -21, -105, -1, 55, -8, 440, -12, 92, -8, 184, -1, 164, -29, -108, -2, -1, 92, -28, 184, -2, 110, -31, 164, -7, 65, -21, 440, -99, -4, -1, 55, -14, 184, -17, 110, -33, 164, -1, 587, -19, 261, -57, -3, -1, -2, 92, -28, 184, -2, 164, -30, 110, -6, 65, -21, 587, -61, -5, -2, 92, -28, 184, -2, 110, -33, 164, -10, 55, -19, 523, -3, -3, -1, -1, 92, -29, 184, -1, 97, -33, 146, -8, 65, -19, 48, -55, -11, -1, -2, 493, -3, 92, -25, 184, -1, 97, -21, 146, -15, 587, -12, -85, -2, -1, 92, -14, 184, -1, 97, -31, 146, -3, 65, -25, -3, 587, -5, -55, -1, 523, -23, 92, -6, 184, -1, 48, -57, 97, -6, 146, -7, 493, -3, 195, -42, -3, -1, 92, -28, 184, -2, 87, -46, 130, -1, 65, -12, 43, -93, -9, -2, 92, -28, 184, -2, 130, -16, 87, -12, 523, -72, -17, -1, -1, 92, -29, 184, -1, 130, -35, 87, -4, 65, -21, -105, -1, 92, -12, 184, -1, 440, -6, 130, -27, 87, -12, 43, -85, 174, -27, -4, -1, -1, 92, -29, 184, -1, 146, -19, 97, -10, 65, -1, -75, -1, 493, -21, 92, -8, 184, -1, 97, -37, 146, -1, 48, -17, 391, -1, -4, -1, -1, 92, -3, 184, -1, 110, -33, 164, -14, 65, -12, 55, -86, -14, -2, 92, -28, 184, -2, 164, -16, 110, -6, 220, -57, -3, -1, 92, -29, 184, -1, 110, -31, 65, -29, 440, -90, -14, -1, 92, -29, 184, -1, 55, -6, 164, -5, 110, -6, 195, -143, -4, -1, -1, 92, -29, 184, -1, 164, -29, 110, -3, 65, -25, -44, -1, 55, -1, 92, -29, 184, -1, 164, -19, 110, -8, 440, -44, 440, -17, 220, -37, -3, -2, -1, 92, -28, 184, -2, 110, -9, 164, -5, 65, -19, 523, -22, 523, -40, -16, -2, -1, 116, -29, 184, -1, 164, -21, 55, -3, 391, -44, 493, -5, 587, -3, -3, -1, -1, -2, 92, -28, 184, -1, 195, -38, 65, -23, 391, -86, 65, -3, 659, -1, 523, -8, -1, 92, -29, 184, -1, 659, -12, 195, -17, -101, -1, -1, -1, 92, -29, 184, -1, 195, -46, 130, -4, 65, -9, 659, -53, 523, -12, 391, -17, -13, -1, 92, -29, 184, -1, 195, -40, 659, -5, 65, -57, 195, -27, -3, -2, -1, -1, -1, 92, -28, 184, -1, 146, -48, 195, -1, 65, -3, 391, -18, 493, -4, 698, -10, -65, -1, -1, 698, -12, 92, -17, 184, -1, 195, -42, 587, -19, 587, -4, 391, -1, 493, -8, 73, -1, -3, 19};
//----------------------//----------------------//----------------------//----------------------//----------------------//----------------------//----------------------



struct Melody {             
  String name;   
  const int* data;         
  Melody(String _name, const int* _data):name(_name), data(_data) {}
  Melody(String _name, const byte* _data):name(_name), data((const int*)_data) {}
};    

Melody melodies[]={
  {"Blinding Lights", blindinglights},
  {"Entertainer", entertainer},
  {"Badinerie", badinerie},
  {"Nokia Tune", nokiaTune},
  {"Groovy Blue", groovyBlue},
  {"Ukraine", ukraine},
  {"Was Woller Wir Trinken", wasWollenWirTrinken},
  // {"Blue", blue},
  // {"Mozart", mozart},
  // {"Mario", mario},
  {"Toreador", toreador}
};

int getMelodyCount(){
   return sizeof(melodies)/sizeof(melodies[0]);
}

String getMelodyName(int index){
   return melodies[index].name;
}

const int* getMelodyData(int index){
   return melodies[index].data;
}





bool melodyPlayerLoopMelody = false;   
bool melodyPlayerCont = true;
String melodyPlayerMelodyName;
unsigned long melodyPlayerPlayStarted = 0;

void melodyPlayerSetMelodyName(String _name){
  melodyPlayerMelodyName=_name;
}
//return true if was played completely or false if interrupted
bool melodyPlayerPlayMelody(const int* melody) {
  Serial.println(F("Set mode: PlayMelody"));
  melodyPlayerPlayStarted = millis();
  modeLoop = melodyPlayerDrawScreen;
  modeButtonUp = 0;
  modeButtonCenter = 0;
  modeButtonDown = 0;
  modeButtonUpLong = melodyPlayerButtonUp;
  modeButtonCenterLong = 0;
  modeButtonDownLong = melodyPlayerButtonDown;
  enableAutoReturn = false;
  melodyPlayerCont = true;
  melodyPlayerLoopMelody = false;
  
  int length = melodyPlayerGetLength(melody);
  Serial.print("length="); Serial.println(length);
  int prequencyThreshold = 0;
  {//analyze melody
    long noteSum = 0;
    long noteCnt = 0;
    for (int i = 1; i < length - 1 && melodyPlayerCont; i++) {
      int n = (melody[i]);
      if (n > 0){
        noteSum += n;
        noteCnt ++;
      }
    }
    prequencyThreshold = 100 + noteSum/noteCnt;
    Serial.print("frequencyThreshold="); Serial.println(prequencyThreshold);
  }
  do{
    melodyPlayerDrawScreen();
    for (int i = 0; i < length - 1 && melodyPlayerCont; i++) {
      int n = (melody[i]);
      
      if(n > 0){
        buzTone(n);
        if(n>prequencyThreshold)
          ledFlashlightOnBottom();
        else
          ledFlashlightOnTop();
      }
      if(n < 0){
        long timeMs = -n;
        if(timeMs < 150){
          delay(timeMs);
        }
        else{
          long noteStarted = millis();
          while(millis() - noteStarted < timeMs){
            if((millis() - noteStarted)+150 < timeMs){
              buttonsLoop();
              melodyPlayerDrawScreen();
            }
          }
        }
        ledFlashlightOffAll();
        buzNoTone();
        delay(13);
        buttonsLoop();
      }
       
    }
    ledFlashlightOffAll();
    buzNoTone();
    delay(500);
  }while(melodyPlayerLoopMelody);
  modeSetup();
  return melodyPlayerCont;
}

void melodyPlayerDrawScreen() {

  lcd()->setColorIndex(white);
  lcd()->drawBox(0, 0, 400, 240);

  lcd()->setFont(u8g2_font_10x20_t_cyrillic);  //ok
  lcd()->setCursor(5, 18); 
  lcd()->setColorIndex(black);
  lcd()->print("Плеєр");
  
  int x = drawStatusbar(363, 1, true);
  if(melodyPlayerLoopMelody)
    draw_ic16_repeat(x-16, 5, black);
  

  if(melodyPlayerCont){
    displayDrawVector(getPathZubat(), 130, 45, 3.0, 3, false, black);
    
    lcd()->setCursor(5, 230); 
    int sec = (millis()-melodyPlayerPlayStarted)/1000;
    if(sec < 10)
      lcd()->print("0");
    lcd()->print(sec);
    lcd()->print("s");

    int width = lcd()->getStrWidth(melodyPlayerMelodyName.c_str());
    lcd()->setCursor(200-width/2, 230); 
    lcd()->print(melodyPlayerMelodyName);
  }
  else{
    lcd()->setCursor(150, 120); 
    lcd()->print("Зупинка...");
  }



  lcd()->drawLine(369, 0, 369, 260);
  lcd()->drawLine(370, 0, 370, 260);
  draw_ic16_cancel(lx(), ly1(), black);
  draw_ic16_repeat(lx(), ly3(), black);
  lcd()->sendBuffer();
}


void melodyPlayerButtonUp(){
  melodyPlayerCont = false;
  melodyPlayerLoopMelody = false;
}
void melodyPlayerButtonDown(){
  melodyPlayerLoopMelody = !melodyPlayerLoopMelody;
}

void printBits(byte myByte) {
  for (byte mask = 0x80; mask; mask >>= 1) {
    if (mask & myByte)
      Serial.print('1');
    else
      Serial.print('0');
  }
}

int melodyPlayerGetLength(const int* melody) {
  for (int i = 0; i < 5000; i++) {
    //Serial.print("i="); Serial.println(i);
    int b = (melody[i]);
    if (b == 19) { //EOF
      return i + 1;
    }
  }
  return 5000;
}














