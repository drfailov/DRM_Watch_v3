int lx(){return 378;}
int ly1(){return 50;}
int ly2(){return 120;}
int ly3(){return 185;}
void draw_ic32_empty(int x, int y, bool color){lcd()->setColorIndex(!color); lcd()->drawBox(x, y, 32, 32);}
void draw_ic24_empty(int x, int y, bool color){lcd()->setColorIndex(!color); lcd()->drawBox(x, y, 24, 24);}
void draw_ic16_empty(int x, int y, bool color){lcd()->setColorIndex(!color); lcd()->drawBox(x, y, 16, 16);}



//------------------------------------------------------------------------------
// File generated by LCD Assistant
// http://en.radzio.dxp.pl/bitmap_converter/
//------------------------------------------------------------------------------

const unsigned char ic16_check [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x1F, 0x00, 0x3F, 0x00, 0x7E, 0x60, 0xFC, 0xF1, 0xF8,
0xFB, 0xF0, 0xFF, 0xE0, 0x7F, 0xC0, 0x3F, 0x80, 0x1F, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00
};void draw_ic16_check(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_check);}


const unsigned char ic16_backspace [] = {
0x00, 0x00, 0x00, 0x00, 0x07, 0xFE, 0x0F, 0xFF, 0x1F, 0xFF, 0x3C, 0xE7, 0x7E, 0x4F, 0xFF, 0x1F,
0x7E, 0x4F, 0x3C, 0xE7, 0x1F, 0xFF, 0x0F, 0xFF, 0x07, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};void draw_ic16_backspace(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_backspace);}


const unsigned char ic16_shift_normal [] = {
0x01, 0x80, 0x03, 0xC0, 0x07, 0xE0, 0x0F, 0xF0, 0x1F, 0xF8, 0x3F, 0xFC, 0x7F, 0xFE, 0xFF, 0xFF,
0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0
};void draw_ic16_shift_normal(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_shift_normal);}


const unsigned char ic16_shift_cap [] = {
0x01, 0x80, 0x03, 0xC0, 0x07, 0xE0, 0x0F, 0xF0, 0x1F, 0xF8, 0x3F, 0xFC, 0x7F, 0xFE, 0xFF, 0xFF,
0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x00, 0x00, 0x0F, 0xF0
};void draw_ic16_shift_cap(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_shift_cap);}


const unsigned char ic16_shift_sym [] = {
0x01, 0x80, 0x03, 0xC0, 0x07, 0xE0, 0x0F, 0xF0, 0x1F, 0xF8, 0x3F, 0xFC, 0x7F, 0xFE, 0xFF, 0xFF,
0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xF0, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x0F, 0xF0
};void draw_ic16_shift_sym(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_shift_sym);}


const unsigned char ic16_cancel [] = {
0x60, 0x06, 0xF0, 0x0F, 0xF8, 0x1F, 0x7C, 0x3E, 0x3E, 0x7C, 0x1F, 0xF8, 0x0F, 0xF0, 0x07, 0xE0,
0x07, 0xE0, 0x0F, 0xF0, 0x1F, 0xF8, 0x3E, 0x7C, 0x7C, 0x3E, 0xF8, 0x1F, 0xF0, 0x0F, 0x60, 0x06
};void draw_ic16_cancel(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_cancel);}


const unsigned char ic16_coffee [] = {
0x00, 0x00, 0xFF, 0xF8, 0xBF, 0xFF, 0xBF, 0xF9, 0xBF, 0xF9, 0xBF, 0xFB, 0xBF, 0xFE, 0xDF, 0xF8,
0x5F, 0xF0, 0x7F, 0xF0, 0x3F, 0xE0, 0x1F, 0xC0, 0x00, 0x00, 0xFF, 0xFC, 0x7F, 0xF8, 0x00, 0x00
};void draw_ic16_coffee(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_coffee);}


const unsigned char ic16_arrow_up [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x03, 0xC0, 0x07, 0xE0, 0x0F, 0xF0, 0x1F, 0xF8,
0x3F, 0xFC, 0x7F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};void draw_ic16_arrow_up(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_arrow_up);}


const unsigned char ic16_arrow_down [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFE, 0x3F, 0xFC,
0x1F, 0xF8, 0x0F, 0xF0, 0x07, 0xE0, 0x03, 0xC0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};void draw_ic16_arrow_down(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_arrow_down);}


const unsigned char ic16_flashlight [] = {
0x01, 0x80, 0x01, 0x80, 0x31, 0x8C, 0x38, 0x1C, 0x11, 0x88, 0x07, 0xE0, 0x07, 0xE0, 0xEF, 0xF7,
0xEF, 0xF7, 0x07, 0xE0, 0x07, 0xE0, 0x11, 0x88, 0x38, 0x1C, 0x31, 0x8C, 0x01, 0x80, 0x01, 0x80
};void draw_ic16_flashlight(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_flashlight);}


const unsigned char ic16_menu [] = {
0x7F, 0xFE, 0xFF, 0xFF, 0x7F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFE, 0xFF, 0xFF,
0x7F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFE, 0xFF, 0xFF, 0x7F, 0xFE, 0x00, 0x00
};void draw_ic16_menu(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_menu);}


const unsigned char ic16_repeat [] = {
0x00, 0x08, 0x00, 0x0C, 0x1F, 0xFE, 0x3F, 0xFF, 0x7F, 0xFE, 0xF0, 0x0C, 0xE0, 0x08, 0xE0, 0x00,
0x00, 0x07, 0x10, 0x07, 0x30, 0x0F, 0x7F, 0xFE, 0xFF, 0xFC, 0x7F, 0xF8, 0x30, 0x00, 0x10, 0x00
};void draw_ic16_repeat(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_repeat);}


const unsigned char ic16_arrow_right [] = {
0x0C, 0x00, 0x0E, 0x00, 0x0F, 0x00, 0x0F, 0x80, 0x0F, 0xC0, 0x0F, 0xE0, 0x0F, 0xF0, 0x0F, 0xF8,
0x0F, 0xF8, 0x0F, 0xF0, 0x0F, 0xE0, 0x0F, 0xC0, 0x0F, 0x80, 0x0F, 0x00, 0x0E, 0x00, 0x0C, 0x00
};void draw_ic16_arrow_right(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_arrow_right);} 

const unsigned char ic16_stopwatch [] = {
0x03, 0xC0, 0x01, 0x80, 0x07, 0xE6, 0x1F, 0xFE, 0x3C, 0x3C, 0x30, 0xCC, 0x70, 0xEE, 0x60, 0xF6,
0x60, 0xF6, 0x60, 0x06, 0x60, 0x06, 0x70, 0x0E, 0x30, 0x0C, 0x3C, 0x3C, 0x1F, 0xF8, 0x07, 0xE0
};void draw_ic16_stopwatch(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_stopwatch);}

const unsigned char ic16_back [] = {
0x00, 0x30, 0x00, 0x78, 0x00, 0xF8, 0x01, 0xF0, 0x03, 0xE0, 0x07, 0xC0, 0x0F, 0x80, 0x1F, 0x00,
0x1F, 0x00, 0x0F, 0x80, 0x07, 0xC0, 0x03, 0xE0, 0x01, 0xF0, 0x00, 0xF8, 0x00, 0x78, 0x00, 0x30
};void draw_ic16_back(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_back);}

const unsigned char ic16_alert [] = {
0x70, 0x0E, 0xF8, 0x1F, 0xF3, 0xCF, 0xEF, 0xF7, 0x5B, 0xFA, 0x1D, 0xF8, 0x3E, 0xFC, 0x3F, 0x7C,
0x3F, 0x7C, 0x3E, 0xFC, 0x3D, 0xFC, 0x3F, 0xFC, 0x1F, 0xF8, 0x1F, 0xF8, 0x33, 0xCC, 0x20, 0x04
};void draw_ic16_alert(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_alert);}

const unsigned char ic16_plus [] = {
0x01, 0x80, 0x03, 0xC0, 0x03, 0xC0, 0x03, 0xC0, 0x03, 0xC0, 0x03, 0xC0, 0x7F, 0xFE, 0xFF, 0xFF,
0xFF, 0xFF, 0x7F, 0xFE, 0x03, 0xC0, 0x03, 0xC0, 0x03, 0xC0, 0x03, 0xC0, 0x03, 0xC0, 0x01, 0x80
}; void draw_ic16_plus(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_plus);}

const unsigned char ic16_minus [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFE, 0xFF, 0xFF,
0xFF, 0xFF, 0x7F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
}; void draw_ic16_minus(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_minus);}

const unsigned char ic16_sound_mute [] = {
0x01, 0x80, 0x03, 0x80, 0x07, 0x80, 0x0F, 0x80, 0x7F, 0x80, 0xFF, 0x91, 0xFF, 0x9B, 0xFF, 0x8E,
0xFF, 0x84, 0xFF, 0x8E, 0xFF, 0x9B, 0x7F, 0x91, 0x0F, 0x80, 0x07, 0x80, 0x03, 0x80, 0x01, 0x80
}; void draw_ic16_sound_mute(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_sound_mute);}

const unsigned char ic16_unlock [] = {
0x03, 0xC0, 0x07, 0xE0, 0x0E, 0x70, 0x0C, 0x30, 0x0C, 0x30, 0x00, 0x30, 0x00, 0x30, 0x1F, 0xF8,
0x3F, 0xFC, 0x3E, 0x7C, 0x3C, 0x3C, 0x3E, 0x7C, 0x3E, 0x7C, 0x3E, 0x7C, 0x3F, 0xFC, 0x1F, 0xF8
}; void draw_ic16_unlock(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_unlock);}

const unsigned char ic16_warning [] = {
0x01, 0x80, 0x03, 0xC0, 0x03, 0xC0, 0x07, 0xE0, 0x06, 0x60, 0x0E, 0x70, 0x0E, 0x70, 0x1E, 0x78,
0x1E, 0x78, 0x3E, 0x7C, 0x3E, 0x7C, 0x7F, 0xFE, 0x7E, 0x7E, 0xFE, 0x7F, 0xFF, 0xFF, 0x7F, 0xFE
}; void draw_ic16_warning(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_warning);}

const unsigned char ic16_pause [] = {
0x3C, 0x3C, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E,
0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x3C, 0x3C
}; void draw_ic16_pause(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_pause);}

const unsigned char ic16_timer [] = {
0x3F, 0xFC, 0x1F, 0xF8, 0x1F, 0xF8, 0x1F, 0xF8, 0x0C, 0x30, 0x06, 0x60, 0x03, 0xC0, 0x01, 0x80,
0x01, 0x80, 0x03, 0xC0, 0x07, 0xE0, 0x0E, 0x70, 0x1C, 0x38, 0x18, 0x18, 0x18, 0x18, 0x3F, 0xFC
}; void draw_ic16_timer(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 2, 16, ic16_timer);}

//----------------------//----------------------//----------------------//----------------------//----------------------//----------------------//----------------------

const unsigned char ic24_back [] = {
0x00, 0x01, 0xC0, 0x00, 0x03, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x1F, 0xC0, 0x00,
0x3F, 0x80, 0x00, 0x7F, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFC, 0x00, 0x03, 0xF8, 0x00, 0x07, 0xF0,
0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xF0, 0x00, 0x03, 0xF8, 0x00, 0x01, 0xFC, 0x00,
0x00, 0xFE, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x1F, 0xC0, 0x00, 0x0F, 0xE0, 0x00,
0x07, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x01, 0xC0, 
}; void draw_ic24_back(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_back);}

const unsigned char ic24_unlock [] = {
0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0xFF, 0x00, 0x01, 0xFF, 0x80, 0x01, 0xC3, 0x80, 0x03,
0x81, 0xC0, 0x03, 0x81, 0xC0, 0x03, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01,
0xC0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xE7, 0xF0, 0x0F, 0xC3, 0xF0, 0x0F, 0xC3, 0xF0,
0x0F, 0xE7, 0xF0, 0x0F, 0xE7, 0xF0, 0x0F, 0xE7, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07,
0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
}; void draw_ic24_unlock(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_unlock);}


const unsigned char ic24_lock [] = {
0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0xFF, 0x00, 0x01, 0xFF, 0x80, 0x01, 0xC3, 0x80, 0x03,
0x81, 0xC0, 0x03, 0x81, 0xC0, 0x03, 0x81, 0xC0, 0x03, 0x81, 0xC0, 0x03, 0x81, 0xC0, 0x03, 0x81,
0xC0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xE7, 0xF0, 0x0F, 0xC3, 0xF0, 0x0F, 0xC3, 0xF0,
0x0F, 0xE7, 0xF0, 0x0F, 0xE7, 0xF0, 0x0F, 0xE7, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07,
0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic24_lock(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_lock);}


const unsigned char ic24_menu [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F,
0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF,
0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
}; void draw_ic24_menu(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_menu);}


const unsigned char ic24_battery100 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F,
0xFF, 0xF8, 0x7F, 0xFF, 0xFC, 0x60, 0x00, 0x0C, 0x6F, 0x77, 0x6C, 0x6F, 0x77, 0x6E, 0x6E, 0x66,
0x6F, 0x6E, 0xEE, 0xEF, 0x6E, 0xEE, 0xEF, 0x6C, 0xCC, 0xEF, 0x6D, 0xDD, 0xEE, 0x6D, 0xDD, 0xEC,
0x60, 0x00, 0x0C, 0x7F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
}; void draw_ic24_battery100(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_battery100);}


const unsigned char ic24_battery75 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F,
0xFF, 0xF8, 0x7F, 0xFF, 0xFC, 0x60, 0x00, 0x0C, 0x6F, 0x77, 0x0C, 0x6F, 0x77, 0x0E, 0x6E, 0x66,
0x0F, 0x6E, 0xEE, 0x0F, 0x6E, 0xEE, 0x0F, 0x6C, 0xCC, 0x0F, 0x6D, 0xDC, 0x0E, 0x6D, 0xDC, 0x0C,
0x60, 0x00, 0x0C, 0x7F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
}; void draw_ic24_battery75(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_battery75);}


const unsigned char ic24_battery50 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F,
0xFF, 0xF8, 0x7F, 0xFF, 0xFC, 0x60, 0x00, 0x0C, 0x6F, 0x70, 0x0C, 0x6F, 0x70, 0x0E, 0x6E, 0x60,
0x0F, 0x6E, 0xE0, 0x0F, 0x6E, 0xE0, 0x0F, 0x6C, 0xC0, 0x0F, 0x6D, 0xC0, 0x0E, 0x6D, 0xC0, 0x0C,
0x60, 0x00, 0x0C, 0x7F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
}; void draw_ic24_battery50(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_battery50);}


const unsigned char ic24_battery25 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F,
0xFF, 0xF8, 0x7F, 0xFF, 0xFC, 0x60, 0x00, 0x0C, 0x6F, 0x00, 0x0C, 0x6F, 0x00, 0x0E, 0x6E, 0x00,
0x0F, 0x6E, 0x00, 0x0F, 0x6E, 0x00, 0x0F, 0x6C, 0x00, 0x0F, 0x6C, 0x00, 0x0E, 0x6C, 0x00, 0x0C,
0x60, 0x00, 0x0C, 0x7F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
}; void draw_ic24_battery25(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_battery25);}


const unsigned char ic24_battery0 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F,
0xFF, 0xF8, 0x7F, 0xFF, 0xFC, 0x60, 0x00, 0x0C, 0x60, 0x00, 0x0C, 0x60, 0x00, 0x0E, 0x60, 0x00,
0x0F, 0x60, 0x00, 0x0F, 0x60, 0x00, 0x0F, 0x60, 0x00, 0x0F, 0x60, 0x00, 0x0E, 0x60, 0x00, 0x0C,
0x60, 0x00, 0x0C, 0x7F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
}; void draw_ic24_battery0(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_battery0);}


const unsigned char ic24_battery_charging [] = {
0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x30, 0x00, 0x00, 0x30, 0x00, 0x3F,
0x77, 0xF8, 0x7E, 0x67, 0xFC, 0x7E, 0xEF, 0xFC, 0x7C, 0xEF, 0xFC, 0x7D, 0xE0, 0x7E, 0x79, 0xFF,
0x7F, 0x7B, 0xFF, 0x7F, 0x7B, 0xFE, 0x7F, 0x78, 0x1E, 0xFF, 0x7F, 0xDC, 0xFE, 0x7F, 0xDD, 0xFC,
0x7F, 0x99, 0xFC, 0x7F, 0xBB, 0xFC, 0x3F, 0xB3, 0xF8, 0x00, 0x30, 0x00, 0x00, 0x20, 0x00, 0x00,
0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
}; void draw_ic24_battery_charging(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_battery_charging);}


const unsigned char ic24_battery_full [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F,
0xFF, 0xF8, 0x7F, 0xFF, 0x0C, 0x7F, 0xFE, 0x6C, 0x7F, 0xFC, 0xCC, 0x7F, 0xF1, 0x9E, 0x78, 0x67,
0x3F, 0x7B, 0x0E, 0x7F, 0x79, 0x9C, 0xFF, 0x7C, 0xF9, 0xFF, 0x7E, 0x73, 0xFE, 0x7F, 0x27, 0xFC,
0x7F, 0x8F, 0xFC, 0x7F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
}; void draw_ic24_battery_full(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_battery_full);}


const unsigned char ic24_flashlight [] = {
0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x00, 0x06,
0x18, 0x60, 0x07, 0x00, 0xE0, 0x03, 0x00, 0xC0, 0x00, 0x3C, 0x00, 0x00, 0x7E, 0x00, 0x00, 0xFF,
0x00, 0x7C, 0xFF, 0x3E, 0x7C, 0xFF, 0x3E, 0x00, 0xFF, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3C, 0x00,
0x03, 0x00, 0xC0, 0x07, 0x00, 0xE0, 0x06, 0x18, 0x60, 0x00, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00,
0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic24_flashlight(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_flashlight);}


const unsigned char ic24_temperature [] = {
0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xC3, 0x00, 0x00, 0xC3, 0x00, 0x00,
0xC3, 0x00, 0x00, 0xC3, 0x00, 0x00, 0xC3, 0x00, 0x00, 0xDB, 0x00, 0x00, 0xDB, 0x00, 0x00, 0xDB,
0x00, 0x00, 0xDB, 0x00, 0x00, 0xDB, 0x00, 0x00, 0xDB, 0x00, 0x01, 0xDB, 0x80, 0x01, 0x99, 0x80,
0x03, 0xBD, 0xC0, 0x03, 0xBD, 0xC0, 0x03, 0xBD, 0xC0, 0x01, 0x99, 0x80, 0x01, 0xC3, 0x80, 0x00,
0xFF, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic24_temperature(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_temperature);}


const unsigned char ic24_check [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x18, 0x00,
0x00, 0x30, 0x00, 0x00, 0x70, 0x00, 0x00, 0xE0, 0x00, 0x01, 0xC0, 0x00, 0x03, 0xC0, 0x20, 0x07,
0x80, 0x38, 0x0F, 0x00, 0x1E, 0x1F, 0x00, 0x0F, 0xBE, 0x00, 0x07, 0xFC, 0x00, 0x03, 0xFC, 0x00,
0x01, 0xF8, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x70, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
}; void draw_ic24_check(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_check);}


const unsigned char ic24_apps [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xE7, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F,
0xE7, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0xE7,
0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xE7, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0xE7, 0xFC,
0x3F, 0xE7, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F,
0xE7, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
}; void draw_ic24_apps(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_apps);}


const unsigned char ic24_alarm [] = {
0x00, 0x00, 0x00, 0x1E, 0x00, 0x78, 0x3F, 0x00, 0xFC, 0x7E, 0x3C, 0x7E, 0x7C, 0xFF, 0x3E, 0x7F,
0xFF, 0xFE, 0x77, 0xFF, 0xEE, 0x27, 0x9F, 0xE4, 0x0F, 0xDF, 0xF0, 0x0F, 0xCF, 0xF0, 0x1F, 0xEF,
0xF8, 0x1F, 0xE7, 0xF8, 0x1F, 0xF3, 0xF8, 0x1F, 0xE7, 0xF8, 0x0F, 0xCF, 0xF0, 0x0F, 0x9F, 0xF0,
0x0F, 0xBF, 0xF0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x1C, 0x7E, 0x38, 0x18,
0x00, 0x18, 0x30, 0x00, 0x0C, 0x00, 0x00, 0x00, 
};void draw_ic24_alarm(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_alarm);}


const unsigned char ic24_arrow_down [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF,
0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x01, 0xFF, 0x80, 0x00, 0xFF, 0x00,
0x00, 0x7E, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic24_arrow_down(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_arrow_down);}


const unsigned char ic24_arrow_left [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x01, 0x80, 0x00, 0x03, 0x80, 0x00, 0x07, 0x80, 0x00,
0x0F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0xFF, 0x80, 0x01, 0xFF,
0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x00, 0xFF, 0x80, 0x00, 0x7F, 0x80,
0x00, 0x3F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x07, 0x80, 0x00, 0x03, 0x80, 0x00,
0x01, 0x80, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 
};void draw_ic24_arrow_left(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_arrow_left);}


const unsigned char ic24_arrow_right [] = {
0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0xC0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xF0, 0x00, 0x00,
0xF8, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x80, 0x00, 0xFF,
0xC0, 0x00, 0xFF, 0xE0, 0x00, 0xFF, 0xE0, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0x80, 0x00, 0xFF, 0x00,
0x00, 0xFE, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xE0, 0x00, 0x00,
0xC0, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic24_arrow_right(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_arrow_right);}


const unsigned char ic24_arrow_up [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x7E, 0x00, 0x00, 0xFF, 0x00, 0x01, 0xFF,
0x80, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC,
0x7F, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic24_arrow_up(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_arrow_up);}


const unsigned char ic24_check2 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00,
0x00, 0x3F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0xFF, 0x00, 0x01, 0xFE, 0x00, 0x03, 0xFE, 0x3C, 0x07,
0xFC, 0x7E, 0x0F, 0xF8, 0x7F, 0x1F, 0xF0, 0x7F, 0xBF, 0xE0, 0x7F, 0xFF, 0xC0, 0x3F, 0xFF, 0x80,
0x1F, 0xFF, 0x00, 0x0F, 0xFE, 0x00, 0x07, 0xFC, 0x00, 0x03, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic24_check2(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_check2);}


const unsigned char ic24_settings [] = {
0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x3F, 0x00, 0x00, 0x7E, 0x00, 0x00, 0xFC, 0x00, 0x00,
0xF8, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x02, 0x01, 0xF0, 0x06, 0x01, 0xF8, 0x0E, 0x03, 0xF8,
0x1E, 0x03, 0xFE, 0x3E, 0x03, 0xFF, 0xFC, 0x07, 0xFF, 0xFC, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0,
0x3F, 0xFF, 0xC0, 0x7F, 0xFC, 0x00, 0x7F, 0xE0, 0x00, 0x3F, 0xC0, 0x00, 0x1F, 0x80, 0x00, 0x0F,
0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic24_settings(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_settings);}


const unsigned char ic24_about [] = {
0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x0F, 0xF3, 0xF0, 0x1F,
0xE1, 0xF8, 0x3F, 0xE1, 0xFC, 0x3F, 0xF3, 0xFC, 0x3F, 0xFF, 0xFC, 0x7F, 0xFF, 0xFE, 0x7F, 0x83,
0xFE, 0x7F, 0xE3, 0xFE, 0x7F, 0xE3, 0xFE, 0x7F, 0xC7, 0xFE, 0x7F, 0xC7, 0xFE, 0x3F, 0x8F, 0xFC,
0x3F, 0x8F, 0xFC, 0x3F, 0x83, 0xFC, 0x1F, 0xC7, 0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x03,
0xFF, 0xC0, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic24_about(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_about);}


const unsigned char ic24_wifi_3 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x01, 0xFF, 0x80, 0x07,
0xFF, 0xE0, 0x0F, 0xE7, 0xF0, 0x1F, 0x00, 0xF8, 0x3C, 0x00, 0x3C, 0x78, 0x3C, 0x1E, 0x30, 0xFF,
0x0C, 0x03, 0xFF, 0xC0, 0x07, 0xE7, 0xE0, 0x0F, 0x81, 0xF0, 0x06, 0x00, 0x60, 0x00, 0x18, 0x00,
0x00, 0x3C, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x18, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic24_wifi_3(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_wifi_3);}


const unsigned char ic24_wifi_2 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
0x81, 0x00, 0x02, 0x00, 0x40, 0x08, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x3C, 0x04, 0x00, 0xFF,
0x00, 0x03, 0xFF, 0xC0, 0x07, 0xE7, 0xE0, 0x0F, 0x81, 0xF0, 0x06, 0x00, 0x60, 0x00, 0x18, 0x00,
0x00, 0x3C, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x18, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic24_wifi_2(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_wifi_2);}


const unsigned char ic24_wifi_1 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
0x81, 0x00, 0x02, 0x00, 0x40, 0x08, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x18,
0x00, 0x00, 0x42, 0x00, 0x01, 0x00, 0x80, 0x04, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00,
0x00, 0x3C, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x18, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic24_wifi_1(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_wifi_1);}


const unsigned char ic24_wifi_0 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
0x81, 0x00, 0x02, 0x00, 0x40, 0x08, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x18,
0x00, 0x00, 0x42, 0x00, 0x01, 0x00, 0x80, 0x04, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x18, 0x00, 0x00, 0x24, 0x00, 0x00, 0x24, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic24_wifi_0(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_wifi_0);}


const unsigned char ic24_bug [] = {
0x00, 0x3C, 0x00, 0x00, 0x7E, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00,
0x7E, 0x00, 0x61, 0xFF, 0x86, 0x73, 0xFF, 0xCE, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x07, 0xFF,
0xE0, 0x07, 0x81, 0xE0, 0x07, 0x81, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0xFF, 0xE0,
0x07, 0x81, 0xE0, 0x07, 0x81, 0xE0, 0x07, 0xFF, 0xE0, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x71,
0xFF, 0x8E, 0x60, 0xFF, 0x06, 0x00, 0x3C, 0x00, 
};void draw_ic24_bug(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_bug);}


const unsigned char ic24_cancel [] = {
0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x3C, 0x00, 0x3C, 0x7E, 0x00, 0x7E, 0x7F, 0x00, 0xFE, 0x3F,
0x81, 0xFC, 0x1F, 0xC3, 0xF8, 0x0F, 0xE7, 0xF0, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x01, 0xFF,
0x80, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xE0,
0x0F, 0xE7, 0xF0, 0x1F, 0xC3, 0xF8, 0x3F, 0x81, 0xFC, 0x7F, 0x00, 0xFE, 0x7E, 0x00, 0x7E, 0x3C,
0x00, 0x3C, 0x18, 0x00, 0x18, 0x00, 0x00, 0x00, 
};void draw_ic24_cancel(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_cancel);}


const unsigned char ic24_question [] = {
0x00, 0x7E, 0x00, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x1F, 0xC1, 0xF8, 0x3F,
0x00, 0xFC, 0x7E, 0x00, 0x7E, 0x7E, 0x00, 0x3E, 0x7E, 0x3C, 0x3E, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8,
0x3F, 0xFF, 0xE0, 0x7F, 0xFF, 0xC0, 0xFF, 0xFF, 0xC1, 0xFF, 0xFF, 0xC3, 0xFF, 0x7F, 0xFF, 0xFE,
0x7F, 0xC3, 0xFE, 0x7F, 0xC3, 0xFE, 0x3F, 0xC3, 0xFC, 0x1F, 0xC3, 0xF8, 0x0F, 0xFF, 0xF0, 0x07,
0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x00, 0x7E, 0x00, 
};void draw_ic24_question(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_question);}


const unsigned char ic24_coffee [] = {
0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xE6, 0x3F,
0xFF, 0xE6, 0x3F, 0xFF, 0xE6, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF,
0xE0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0xC0, 0x0F, 0xFF, 0x80,
0x07, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xF8, 0x3F,
0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 
};void draw_ic24_coffee(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_coffee);}


const unsigned char ic24_clock [] = {
0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x1F,
0xE7, 0xF8, 0x3F, 0xE7, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0xE7, 0xFC, 0x7F, 0xE7, 0xFE, 0x7F, 0xE7,
0xFE, 0x7F, 0xE7, 0xFE, 0x7F, 0xE3, 0xFE, 0x7F, 0xF1, 0xFE, 0x7F, 0xF8, 0xFE, 0x3F, 0xFC, 0xFC,
0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x03,
0xFF, 0xC0, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic24_clock(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_clock);}


const unsigned char ic24_saved [] = {
0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F,
0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF,
0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8,
0x1F, 0xFF, 0xF8, 0x1F, 0xE7, 0xF8, 0x1F, 0xC3, 0xF8, 0x1F, 0x81, 0xF8, 0x1F, 0x00, 0xF8, 0x1E,
0x00, 0x78, 0x1C, 0x00, 0x38, 0x18, 0x00, 0x18, 
};void draw_ic24_saved(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_saved);}


const unsigned char ic24_sync [] = {
0x00, 0x00, 0x0C, 0x00, 0xFE, 0x1C, 0x03, 0xFF, 0xBC, 0x07, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x1F,
0xC3, 0xFC, 0x1E, 0x03, 0xFC, 0x1C, 0x07, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xF0, 0x00,
0x3F, 0xE0, 0x38, 0x3F, 0xC0, 0x78, 0x3F, 0xC3, 0xF8, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xE0, 0x3D,
0xFF, 0xC0, 0x38, 0x7F, 0x00, 0x30, 0x00, 0x00, 
};void draw_ic24_sync(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_sync);}


const unsigned char ic24_watchface [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x07, 0x03, 0x80, 0x7F,
0xFF, 0xFC, 0x7F, 0xFF, 0xFC, 0x60, 0x00, 0x0E, 0x60, 0x00, 0x0E, 0x60, 0xCC, 0x0C, 0x60, 0xCC,
0x0C, 0x60, 0x00, 0x0E, 0x62, 0x01, 0x0E, 0x63, 0x03, 0x0C, 0x61, 0xFE, 0x0C, 0x60, 0x78, 0x0E,
0x60, 0x00, 0x0E, 0x7F, 0xFF, 0xFC, 0x7F, 0xFF, 0xFC, 0x07, 0x03, 0x80, 0x03, 0x03, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic24_watchface(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_watchface);}


const unsigned char ic24_timezone [] = {
0x01, 0xF8, 0x00, 0x07, 0xFF, 0x00, 0x0E, 0x8B, 0x80, 0x18, 0x89, 0xC0, 0x31, 0x04, 0xE0, 0x61,
0x04, 0x60, 0x61, 0x04, 0x30, 0xC1, 0x04, 0x30, 0xC2, 0x02, 0x10, 0xC2, 0x02, 0x10, 0xFF, 0xF0,
0x00, 0xC2, 0x01, 0xF0, 0xC2, 0x07, 0xFC, 0x61, 0x0E, 0x0E, 0x61, 0x0C, 0x46, 0x71, 0x18, 0x43,
0x39, 0x18, 0x43, 0x1C, 0x98, 0x73, 0x0F, 0x98, 0x03, 0x03, 0xD8, 0x03, 0x00, 0x0C, 0x06, 0x00,
0x0E, 0x0E, 0x00, 0x07, 0xFC, 0x00, 0x01, 0xF0, 
};void draw_ic24_timezone(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_timezone);}


const unsigned char ic24_music [] = {
0x00, 0x00, 0x18, 0x00, 0x00, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x7F, 0xFC, 0x00,
0xFF, 0xFC, 0x00, 0xFF, 0xFC, 0x00, 0xFF, 0xEC, 0x00, 0xFF, 0x0C, 0x00, 0xF8, 0x0C, 0x00, 0xC0,
0x0C, 0x00, 0xC0, 0x0C, 0x00, 0xC0, 0x0C, 0x00, 0xC0, 0x7C, 0x00, 0xC1, 0xFC, 0x07, 0xC1, 0xFC,
0x1F, 0xC3, 0xFC, 0x1F, 0xC3, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xC1, 0xFC, 0x3F, 0xC0, 0xF8, 0x1F,
0xC0, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic24_music(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_music);}


const unsigned char ic24_invert [] = {
0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0xFF, 0x00, 0x03, 0xFF, 0xC0, 0x07, 0xF1, 0xE0, 0x0F,
0xF0, 0x70, 0x1F, 0xF0, 0x38, 0x1F, 0xF0, 0x18, 0x3F, 0xF0, 0x1C, 0x3F, 0xF0, 0x0C, 0x7F, 0xF0,
0x0E, 0x7F, 0xF0, 0x06, 0x7F, 0xF0, 0x06, 0x7F, 0xF0, 0x0E, 0x3F, 0xF0, 0x0C, 0x3F, 0xF0, 0x1C,
0x1F, 0xF0, 0x18, 0x1F, 0xF0, 0x38, 0x0F, 0xF0, 0x70, 0x07, 0xF1, 0xE0, 0x03, 0xFF, 0xC0, 0x00,
0xFF, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic24_invert(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_invert);}


const unsigned char ic24_reboot [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x0F, 0xFF, 0x80, 0x1F, 0xFF, 0xC0, 0x3F,
0xFF, 0xE0, 0x3F, 0x07, 0xF0, 0x7E, 0x03, 0xF0, 0x7C, 0x01, 0xF8, 0x78, 0x00, 0xF8, 0xF8, 0x00,
0xF8, 0xF8, 0x07, 0xFF, 0xF8, 0x03, 0xFE, 0xF8, 0x01, 0xFC, 0x78, 0x00, 0xF8, 0x7C, 0x00, 0x70,
0x7E, 0x00, 0x20, 0x3F, 0x06, 0x00, 0x3F, 0xFF, 0x00, 0x1F, 0xFF, 0x80, 0x0F, 0xFF, 0x00, 0x03,
0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic24_reboot(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_reboot);}


const unsigned char ic24_stopwatch [] = {
0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x08, 0x01, 0xFF, 0x1C, 0x07, 0xFF, 0xFE, 0x0F,
0x81, 0xFC, 0x1E, 0x0E, 0x78, 0x1C, 0x0F, 0xB8, 0x38, 0x0F, 0xD8, 0x38, 0x0F, 0xDC, 0x30, 0x0F,
0xEC, 0x70, 0x0F, 0xEE, 0x70, 0x0F, 0xEE, 0x70, 0x00, 0x0E, 0x70, 0x00, 0x0E, 0x30, 0x00, 0x0C,
0x38, 0x00, 0x1C, 0x38, 0x00, 0x1C, 0x1C, 0x00, 0x38, 0x1E, 0x00, 0x78, 0x0F, 0x81, 0xF0, 0x07,
0xFF, 0xE0, 0x01, 0xFF, 0x80, 0x00, 0x3C, 0x00, 
};void draw_ic24_stopwatch(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_stopwatch);}

const unsigned char ic24_pause [] = {
0x00, 0x00, 0x00, 0x1F, 0x81, 0xF8, 0x3F, 0xC3, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F,
0xC3, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xC3,
0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xC3, 0xFC,
0x3F, 0xC3, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F,
0xC3, 0xFC, 0x1F, 0x81, 0xF8, 0x00, 0x00, 0x00, 
};void draw_ic24_pause(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_pause);}

const unsigned char ic24_meow [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x10, 0x0C, 0x00, 0x30, 0x0E, 0x00, 0x70, 0x0F,
0x00, 0xF0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF,
0xF0, 0x4F, 0xFF, 0xF2, 0x2F, 0xFF, 0xF4, 0x0F, 0xC3, 0xF0, 0x6F, 0xE7, 0xF6, 0x07, 0xFF, 0xE0,
0x33, 0xFF, 0xCC, 0x41, 0xFF, 0x82, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic24_meow(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_meow);}

const unsigned char ic24_sound_on [] = {
0x00, 0x1C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x7C, 0x10, 0x00, 0xFC, 0x18, 0x01, 0xFC, 0x1C, 0x03,
0xFD, 0x0C, 0x7F, 0xFD, 0x8E, 0xFF, 0xFC, 0xC6, 0xFF, 0xFC, 0xC6, 0xFF, 0xFC, 0xE7, 0xFF, 0xFC,
0x63, 0xFF, 0xFC, 0x63, 0xFF, 0xFC, 0x63, 0xFF, 0xFC, 0x63, 0xFF, 0xFC, 0xE7, 0xFF, 0xFC, 0xC6,
0xFF, 0xFC, 0xC6, 0x7F, 0xFD, 0x8E, 0x03, 0xFD, 0x0C, 0x01, 0xFC, 0x1C, 0x00, 0xFC, 0x18, 0x00,
0x7C, 0x10, 0x00, 0x3C, 0x00, 0x00, 0x1C, 0x00, 
}; void draw_ic24_sound_on(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_sound_on);}

const unsigned char ic24_sound_mute [] = {
0x00, 0x1C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x03,
0xFC, 0x00, 0x7F, 0xFC, 0x00, 0xFF, 0xFC, 0x00, 0xFF, 0xFC, 0x00, 0xFF, 0xFC, 0xC6, 0xFF, 0xFC,
0x6C, 0xFF, 0xFC, 0x38, 0xFF, 0xFC, 0x38, 0xFF, 0xFC, 0x6C, 0xFF, 0xFC, 0xC6, 0xFF, 0xFC, 0x00,
0xFF, 0xFC, 0x00, 0x7F, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00,
0x7C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x1C, 0x00, 
}; void draw_ic24_sound_mute(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_sound_mute);}

const unsigned char ic24_life [] = {
0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00,
0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00,
0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
}; void draw_ic24_life(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_life);}

const unsigned char ic24_calendar [] = {
0x06, 0x00, 0x60, 0x06, 0x00, 0x60, 0x36, 0xFF, 0x6C, 0x70, 0xFF, 0x0E, 0x79, 0xFF, 0x9E, 0x7F,
0xFF, 0xFE, 0x7F, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFE, 0x7F, 0xFF,
0xFE, 0x79, 0xE7, 0x9E, 0x70, 0xC3, 0x0E, 0x70, 0xC3, 0x0E, 0x79, 0xE7, 0x9E, 0x7F, 0xFF, 0xFE,
0x7F, 0xFF, 0xFE, 0x79, 0xE7, 0x9E, 0x70, 0xC3, 0x0E, 0x70, 0xC3, 0x0E, 0x79, 0xE7, 0x9E, 0x7F,
0xFF, 0xFE, 0x7F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFC, 
}; void draw_ic24_calendar(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_calendar);}

const unsigned char ic24_buttonsound [] = {
0x00, 0x40, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xE4, 0x04, 0x00, 0xEE, 0x0E, 0x04,
0xEE, 0x0E, 0x0E, 0xEE, 0x0E, 0x0E, 0xEE, 0x4E, 0x0E, 0xEE, 0xEE, 0x4E, 0xEE, 0xEE, 0xEE, 0xEE,
0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x4E, 0xEE, 0xEE, 0x0E, 0xEE, 0xEE,
0x0E, 0xEE, 0x4E, 0x0E, 0xEE, 0x0E, 0x04, 0xEE, 0x0E, 0x00, 0xEE, 0x0E, 0x00, 0xE4, 0x04, 0x00,
0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x40, 0x00, 
};  void draw_ic24_buttonsound(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_buttonsound);}

const unsigned char ic24_display [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0,
0xFF, 0xFF, 0xE0, 0xFF, 0xFF, 0xE7, 0xFF, 0xFF, 0xE7, 0xFF, 0xFF, 0xE7, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE7, 0xFF, 0xFF, 0xE7,
0xFF, 0xFF, 0xE7, 0xFF, 0xFF, 0x07, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F,
0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
}; void draw_ic24_display(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_display);}

const unsigned char ic24_random [] = {
0xF0, 0x0F, 0x00, 0xF0, 0x0F, 0x00, 0xF0, 0x0F, 0x00, 0xF0, 0x0F, 0x00, 0x0F, 0xFF, 0x0F, 0x0F,
0xFF, 0x0F, 0x0F, 0xFF, 0x0F, 0x0F, 0xFF, 0x0F, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0,
0x00, 0x00, 0xF0, 0x00, 0xFF, 0x0F, 0xF0, 0xFF, 0x0F, 0xF0, 0xFF, 0x0F, 0xF0, 0xFF, 0x0F, 0xF0,
0x00, 0x0F, 0x0F, 0x00, 0x0F, 0x0F, 0x00, 0x0F, 0x0F, 0x00, 0x0F, 0x0F, 0x0F, 0x00, 0xF0, 0x0F,
0x00, 0xF0, 0x0F, 0x00, 0xF0, 0x0F, 0x00, 0xF0, 
}; void draw_ic24_random(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_random);}


const unsigned char ic24_timer [] = {
0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07,
0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x01, 0x81, 0x80, 0x00, 0xC3, 0x00, 0x00, 0x66, 0x00, 0x00, 0x7E,
0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0xFF, 0x00,
0x01, 0xE7, 0x80, 0x03, 0xC3, 0xC0, 0x07, 0x81, 0xE0, 0x07, 0x00, 0xE0, 0x06, 0x00, 0x60, 0x06,
0x00, 0x60, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 
}; void draw_ic24_timer(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_timer);}

const unsigned char ic24_digitalclock [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x7F,
0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE7, 0xC7, 0xC7, 0xC7, 0x83, 0x83, 0xC5, 0x39,
0x39, 0xE7, 0x39, 0x39, 0xE7, 0x39, 0x39, 0xE5, 0x39, 0x39, 0xE7, 0x83, 0x83, 0xE7, 0xC7, 0xC7,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFE, 0x18, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
}; void draw_ic24_digitalclock(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_digitalclock);}

const unsigned char ic24_date [] = {
0x03, 0x00, 0xC0, 0x03, 0x00, 0xC0, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x33, 0x00, 0xCC, 0x30,
0x00, 0x0C, 0x30, 0x00, 0x0C, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF,
0xFC, 0x3F, 0x1E, 0xFC, 0x3E, 0x4C, 0xFC, 0x3F, 0xC8, 0xFC, 0x3F, 0x9C, 0xFC, 0x3F, 0xCC, 0xFC,
0x3E, 0x4C, 0xFC, 0x3F, 0x18, 0x7C, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F,
0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
}; void draw_ic24_date(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_date);}

const unsigned char ic24_weekday [] = {
0x03, 0x00, 0xC0, 0x03, 0x00, 0xC0, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x33, 0x00, 0xCC, 0x30,
0x00, 0x0C, 0x30, 0x00, 0x0C, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF,
0xFC, 0x38, 0x19, 0x9C, 0x39, 0x99, 0x9C, 0x39, 0x99, 0x9C, 0x39, 0x98, 0x1C, 0x39, 0x99, 0x9C,
0x39, 0x99, 0x9C, 0x39, 0x99, 0x9C, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F,
0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
}; void draw_ic24_weekday(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_weekday);}

const unsigned char ic24_checklist [] = {
0x07, 0xFF, 0xE0, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x7F, 0xFF, 0xFE, 0x7F, 0xFF, 0xFE, 0xFF,
0xBF, 0xFF, 0xFF, 0x3F, 0xFF, 0xF2, 0x70, 0x1F, 0xF8, 0xF0, 0x1F, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xFF, 0x3F, 0xFF, 0xF2, 0x70, 0x1F,
0xF8, 0xF0, 0x1F, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFE, 0x7F, 0xFF, 0xFE, 0x3F,
0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x07, 0xFF, 0xE0, 
}; void draw_ic24_checklist(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_checklist);}

const unsigned char ic24_dji [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1C, 0x00, 0x3F, 0xBD, 0xEF, 0x7F, 0xBD, 0xCE, 0x78, 0x3D,
0xDE, 0x78, 0x39, 0xDE, 0xF0, 0x7B, 0xDC, 0xFF, 0xFB, 0x9C, 0xFF, 0xF3, 0xBC, 0x00, 0x07, 0x80,
0x00, 0x7F, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
}; void draw_ic24_dji(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_dji);}

const unsigned char ic24_digitalclock2 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x78, 0x0F, 0x1E, 0x78, 0x0F, 0x1E, 0x84, 0x10, 0xA1, 0x84, 0x90, 0xA1, 0x84, 0x90,
0xA1, 0x00, 0x00, 0x00, 0x84, 0x10, 0xA1, 0x84, 0x90, 0xA1, 0x84, 0x90, 0xA1, 0x78, 0x0F, 0x1E,
0x78, 0x0F, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
}; void draw_ic24_digitalclock2(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_digitalclock2);}


const unsigned char ic24_ant [] = {
0x01, 0x81, 0x80, 0x00, 0xFF, 0x00, 0x00, 0x7E, 0x00, 0x10, 0x7E, 0x08, 0x10, 0xFF, 0x08, 0x18,
0x7E, 0x18, 0x08, 0x7E, 0x10, 0x08, 0x3C, 0x10, 0x08, 0x3C, 0x10, 0x0C, 0xFF, 0x30, 0x07, 0xBD,
0xE0, 0x20, 0x3C, 0x04, 0x30, 0xFF, 0x0C, 0x1D, 0xBD, 0xB8, 0x07, 0x3C, 0xE0, 0x00, 0x7E, 0x00,
0x01, 0xFF, 0x80, 0x03, 0x7E, 0xC0, 0x06, 0x7E, 0x60, 0x04, 0x7E, 0x20, 0x0C, 0x7E, 0x30, 0x08,
0x7E, 0x10, 0x18, 0x3C, 0x18, 0x30, 0x18, 0x0C, 
};  void draw_ic24_ant(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_ant);}

const unsigned char ic24_shutdown [] = {
0x00, 0x18, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x07, 0x3C, 0xE0, 0x0F,
0x3C, 0xF0, 0x1F, 0x3C, 0xF8, 0x3E, 0x3C, 0x7C, 0x3C, 0x3C, 0x3C, 0x78, 0x3C, 0x1E, 0x78, 0x3C,
0x1E, 0x78, 0x3C, 0x1E, 0x78, 0x18, 0x1E, 0x78, 0x00, 0x1E, 0x78, 0x00, 0x1E, 0x78, 0x00, 0x1E,
0x3C, 0x00, 0x3C, 0x3C, 0x00, 0x3C, 0x3E, 0x00, 0x7C, 0x1F, 0x81, 0xF8, 0x0F, 0xFF, 0xF0, 0x07,
0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x00, 0x7E, 0x00, 
}; void draw_ic24_shutdown(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 3, 24, ic24_shutdown);}


//----------------------//----------------------//----------------------//----------------------//----------------------//----------------------//----------------------

const unsigned char ic28_dji [] = {
0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC,
0x00, 0x00, 0x00, 0x00, 0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8, 0x00, 0x00, 0x00, 0x00,
0x07, 0xF8, 0x00, 0x00, 0x07, 0xFF, 0xE7, 0xF9, 0xFC, 0xFE, 0x0F, 0xFF, 0xE7, 0xF3, 0xFC, 0xFE,
0x1F, 0xFF, 0xE7, 0xF3, 0xF9, 0xFE, 0x1F, 0xF0, 0x0F, 0xF3, 0xF9, 0xFE, 0x3F, 0xE0, 0x0F, 0xE7,
0xF9, 0xFC, 0x3F, 0xC0, 0x0F, 0xE7, 0xF9, 0xFC, 0x3F, 0xC0, 0x0F, 0xE7, 0xF3, 0xFC, 0x3F, 0xC0,
0x1F, 0xE7, 0xF3, 0xF8, 0x7F, 0xC0, 0x1F, 0xCF, 0xF3, 0xF8, 0x7F, 0x80, 0x1F, 0xCF, 0xF7, 0xF8,
0x7F, 0x80, 0x3F, 0xCF, 0xE7, 0xF8, 0x7F, 0xFF, 0xFF, 0x9F, 0xE7, 0xF0, 0x7F, 0xFF, 0xFF, 0x9F,
0xE7, 0xF0, 0x7F, 0xFF, 0xFF, 0x1F, 0xCF, 0xF0, 0x07, 0xFF, 0xE0, 0x3F, 0xC7, 0xE0, 0x00, 0x00,
0x00, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0x80, 0x00,
0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF8,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};void draw_ic28_dji(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 6, 28, ic28_dji);}

const unsigned char ic38_dji [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFE, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFE, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x00,
0x00, 0x7F, 0xFF, 0x8F, 0xFC, 0x7F, 0xC7, 0xFE, 0x03, 0xFF, 0xFF, 0x8F, 0xFC, 0xFF, 0xC7, 0xFE,
0x07, 0xFF, 0xFF, 0x9F, 0xF8, 0xFF, 0xC7, 0xFE, 0x0F, 0xFF, 0xFF, 0x9F, 0xF8, 0xFF, 0xCF, 0xFC,
0x0F, 0xFF, 0xFF, 0x1F, 0xF8, 0xFF, 0x8F, 0xFC, 0x1F, 0xFE, 0x00, 0x1F, 0xF9, 0xFF, 0x8F, 0xFC,
0x1F, 0xFC, 0x00, 0x3F, 0xF1, 0xFF, 0x8F, 0xFC, 0x1F, 0xFC, 0x00, 0x3F, 0xF1, 0xFF, 0x9F, 0xF8,
0x3F, 0xF8, 0x00, 0x3F, 0xF3, 0xFF, 0x1F, 0xF8, 0x3F, 0xF8, 0x00, 0x3F, 0xF3, 0xFF, 0x1F, 0xF8,
0x3F, 0xF8, 0x00, 0x7F, 0xE3, 0xFF, 0x3F, 0xF0, 0x7F, 0xF0, 0x00, 0x7F, 0xE3, 0xFF, 0x3F, 0xF0,
0x7F, 0xF0, 0x00, 0x7F, 0xE7, 0xFE, 0x3F, 0xF0, 0x7F, 0xF0, 0x00, 0xFF, 0xC7, 0xFE, 0x3F, 0xF0,
0x7F, 0xF0, 0x00, 0xFF, 0xC7, 0xFE, 0x7F, 0xE0, 0x7F, 0xFF, 0xFF, 0xFF, 0xCF, 0xFE, 0x7F, 0xE0,
0x7F, 0xFF, 0xFF, 0xFF, 0x8F, 0xFC, 0x7F, 0xE0, 0x7F, 0xFF, 0xFF, 0xFF, 0x8F, 0xFC, 0x7F, 0xC0,
0x7F, 0xFF, 0xFF, 0xFF, 0x1F, 0xFC, 0xFF, 0xC0, 0x3F, 0xFF, 0xFF, 0xF8, 0x3F, 0xF8, 0xFF, 0xC0,
0x00, 0x00, 0x00, 0x00, 0x3F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x00,
0x00, 0x00, 0x00, 0x1F, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xF0, 0x00, 0x00,
0x00, 0x00, 0x03, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xC0, 0x00, 0x00,
0x00, 0x00, 0x07, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0x00, 0x00, 0x00,
0x00, 0x00, 0x0F, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};void draw_ic38_dji(int x, int y, bool color){lcd()->setColorIndex(color);  lcd()->drawBitmap(x, y, 8, 38, ic38_dji);}

//----------------------//----------------------//----------------------//----------------------//----------------------//----------------------//----------------------



const byte pathDrmWatch[] = { 57,
   0,  0,     7,  0,    10,  3,    10, 13,     7, 16,  //D
   0, 16,     0,  0,   255,255,    13, 16,    13,  0,  //R
  20,  0,    22,  2,    22,  6,    20,  8,    14,  8,
  22, 16,   255,255,    25, 16,    25,  0,    33,  8,  //M
  41,  0,    41, 16,   255,255,     1, 23,     4, 34,  //W
   6, 28,     8, 34,    11, 22,   255,255,    11, 34,  //A
  15, 22,    17, 29,    14, 29,    17, 29,    19, 34,
 255,255,    20, 22,    26, 22,    23, 22,    23, 34,  //T
 255,255,    36, 24,    34, 22,    31, 22,    29, 24,  //C
  29, 32,    31, 34,    34, 34,    36, 32,   255,255,
  39, 22,    39, 34,    39, 30,    41, 28,    43, 28,  //H
  45, 30,    45, 34
}; const byte* getPathDrmWatch(){return pathDrmWatch;}

const byte pathBubble[] = { 12,
  39, 28,    53, 18,    89, 18,    95, 15,    95,  3,  
  89,  0,    5,   0,     0,  3,     0, 15,     5, 18,
  40, 18,   37,  29
}; const byte* getpathBubble(){return pathBubble;}

const byte pathZubat[] = { 42,
   0, 36,     4, 35,    20,  3,    23,  0,    36,  0, //контур
  34,  3,    34,  8,    23,  8,    16, 24,    35, 24,
  35, 35,    33, 37,     0, 37,   255,255,    16, 43,//лапы
  18, 41,    20, 43,    18, 41,    18, 37,    26, 37,
  26, 41,    24, 43,    26, 41,    28, 43,   255,255,
  33,  9,    29, 17,    28,  9,    23, 17,    23,  8, //зубы
  20, 16,    23, 23,    27, 15,    29, 23,    33, 15,
  34, 23,   255,255,    31,  2,    31,  4,    31,  3, //глаз
  32,  3,    30,  3
}; const byte* getPathZubat(){return pathZubat;}